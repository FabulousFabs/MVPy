
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/rsa/1_rsa_intro.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_rsa_1_rsa_intro.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_rsa_1_rsa_intro.py:


1. Computing RDMs
=================

Before we turn to real data, we'll briefly familiarise ourselves with the syntax around computing RDMs.

.. GENERATED FROM PYTHON SOURCE LINES 8-9

Now, let's do some imports:

.. GENERATED FROM PYTHON SOURCE LINES 9-15

.. code-block:: Python

    import torch
    import matplotlib.pyplot as plt

    from mvpy.estimators import RSA
    from mvpy.math import euclidean








.. GENERATED FROM PYTHON SOURCE LINES 16-17

Let's begin by simulating some data.

.. GENERATED FROM PYTHON SOURCE LINES 17-24

.. code-block:: Python


    trials, channels, timepoints = 240, 60, 100
    X = torch.normal(0, 1, (trials, channels, timepoints))

    # Because we want to see some structure in our RDMs, let's create some similarity.
    X = X * torch.sin(2 * torch.pi * torch.linspace(0, 1, trials))[:,None,None]








.. GENERATED FROM PYTHON SOURCE LINES 25-26

Given our structured data, we are ready to compute our RDM.

.. GENERATED FROM PYTHON SOURCE LINES 26-30

.. code-block:: Python

    rsa = RSA(estimator = euclidean).fit(X)
    rsa.transform(X)
    print(rsa.rdm_.shape)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    torch.Size([28680, 100])




.. GENERATED FROM PYTHON SOURCE LINES 31-32

As you can see, the RDM is now stacked with all comparisons in the first dimension and only the time domain remaining. This is convenient for modeling and model comparisons, but for now we would like to see the full RDM.

.. GENERATED FROM PYTHON SOURCE LINES 32-37

.. code-block:: Python

    rdm = torch.zeros((trials, trials, timepoints))
    rdm[rsa.cx_, rsa.cy_] = rdm[rsa.cy_, rsa.cx_ ] = rsa.rdm_

    vmax = torch.abs(rsa.rdm_).max()
    fig, ax = plt.subplots()
    ax.imshow(rdm[...,0], vmin = -vmax, vmax = vmax, cmap = 'RdBu_r')


.. image-sg:: /examples/rsa/images/sphx_glr_1_rsa_intro_001.png
   :alt: 1 rsa intro
   :srcset: /examples/rsa/images/sphx_glr_1_rsa_intro_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.462 seconds)


.. _sphx_glr_download_examples_rsa_1_rsa_intro.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 1_rsa_intro.ipynb <1_rsa_intro.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 1_rsa_intro.py <1_rsa_intro.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: 1_rsa_intro.zip <1_rsa_intro.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
