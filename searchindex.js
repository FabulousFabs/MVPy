Search.setIndex({"alltitles": {"1. Classification": [[1, null]], "1. Computing RDMs": [[8, null]], "2. RSA encoders": [[9, null]], "Computation times": [[3, null], [6, null], [11, null], [12, null], [14, null]], "Decoders": [[2, null], [7, "decoders"]], "Documentation": [[0, null]], "Encoders": [[4, null], [5, null], [7, "encoders"]], "Examples": [[7, null]], "Module contents": [[16, "module-mvpy"], [17, "module-mvpy.estimators"], [18, "module-mvpy.math"], [19, "module-mvpy.signal"], [20, "module-mvpy.utilities"]], "Representational similarity analysis": [[7, "representational-similarity-analysis"], [10, null]], "Submodules": [[17, "submodules"], [18, "submodules"], [20, "submodules"]], "Subpackages": [[16, "subpackages"]], "mvpy": [[15, null]], "mvpy package": [[16, null]], "mvpy.estimators package": [[17, null]], "mvpy.estimators.b2b module": [[17, "module-mvpy.estimators.b2b"]], "mvpy.estimators.classifier module": [[17, "module-mvpy.estimators.classifier"]], "mvpy.estimators.covariance module": [[17, "module-mvpy.estimators.covariance"]], "mvpy.estimators.decoder module": [[17, "module-mvpy.estimators.decoder"]], "mvpy.estimators.encoder module": [[17, "module-mvpy.estimators.encoder"]], "mvpy.estimators.ridgecv module": [[17, "module-mvpy.estimators.ridgecv"]], "mvpy.estimators.rsa module": [[17, "module-mvpy.estimators.rsa"]], "mvpy.estimators.scaler module": [[17, "module-mvpy.estimators.scaler"]], "mvpy.estimators.sliding module": [[17, "module-mvpy.estimators.sliding"]], "mvpy.estimators.timedelayed module": [[17, "module-mvpy.estimators.timedelayed"]], "mvpy.math package": [[18, null]], "mvpy.math.accuracy module": [[18, "module-mvpy.math.accuracy"]], "mvpy.math.cosine module": [[18, "module-mvpy.math.cosine"]], "mvpy.math.crossvalidated module": [[18, "module-mvpy.math.crossvalidated"]], "mvpy.math.euclidean module": [[18, "module-mvpy.math.euclidean"]], "mvpy.math.mahalanobis module": [[18, "module-mvpy.math.mahalanobis"]], "mvpy.math.pearsonr module": [[18, "module-mvpy.math.pearsonr"]], "mvpy.math.rank module": [[18, "module-mvpy.math.rank"]], "mvpy.math.roc_auc module": [[18, "module-mvpy.math.roc_auc"]], "mvpy.math.spearmanr module": [[18, "module-mvpy.math.spearmanr"]], "mvpy.signal package": [[19, null]], "mvpy.utilities package": [[20, null]], "mvpy.utilities.progressbar module": [[20, "module-mvpy.utilities.progressbar"]], "\ud83d\udc23 So what can MVPy do?": [[13, "so-what-can-mvpy-do"]], "\ud83d\udd0e Documentation": [[13, "documentation"]], "\ud83d\ude80 Getting started with MVPy": [[13, null]]}, "docnames": ["documentation/index", "examples/decoders/1_decoders_intro", "examples/decoders/index", "examples/decoders/sg_execution_times", "examples/encoders/encoders_intro", "examples/encoders/index", "examples/encoders/sg_execution_times", "examples/index", "examples/rsa/1_rsa_intro", "examples/rsa/2_rsa_encoder", "examples/rsa/index", "examples/rsa/sg_execution_times", "examples/sg_execution_times", "index", "sg_execution_times", "source/modules", "source/mvpy", "source/mvpy.estimators", "source/mvpy.math", "source/mvpy.signal", "source/mvpy.utilities"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["documentation/index.rst", "examples/decoders/1_decoders_intro.rst", "examples/decoders/index.rst", "examples/decoders/sg_execution_times.rst", "examples/encoders/encoders_intro.rst", "examples/encoders/index.rst", "examples/encoders/sg_execution_times.rst", "examples/index.rst", "examples/rsa/1_rsa_intro.rst", "examples/rsa/2_rsa_encoder.rst", "examples/rsa/index.rst", "examples/rsa/sg_execution_times.rst", "examples/sg_execution_times.rst", "index.rst", "sg_execution_times.rst", "source/modules.rst", "source/mvpy.rst", "source/mvpy.estimators.rst", "source/mvpy.math.rst", "source/mvpy.signal.rst", "source/mvpy.utilities.rst"], "indexentries": {"accuracy() (in module mvpy.math.accuracy)": [[18, "mvpy.math.accuracy.accuracy", false]], "alpha_ (mvpy.estimators.decoder.decoder attribute)": [[17, "mvpy.estimators.decoder.Decoder.alpha_", false]], "alpha_ (mvpy.estimators.ridgecv.ridgecv attribute)": [[17, "mvpy.estimators.ridgecv.RidgeCV.alpha_", false]], "alpha_per_target (mvpy.estimators.b2b.b2b attribute)": [[17, "mvpy.estimators.b2b.B2B.alpha_per_target", false]], "alphas (mvpy.estimators.b2b.b2b attribute)": [[17, "mvpy.estimators.b2b.B2B.alphas", false]], "alphas (mvpy.estimators.encoder.encoder attribute)": [[17, "mvpy.estimators.encoder.Encoder.alphas", false]], "alphas (mvpy.estimators.timedelayed.timedelayed attribute)": [[17, "mvpy.estimators.timedelayed.TimeDelayed.alphas", false]], "b2b (class in mvpy.estimators.b2b)": [[17, "mvpy.estimators.b2b.B2B", false]], "c_ (mvpy.estimators.timedelayed.timedelayed attribute)": [[17, "mvpy.estimators.timedelayed.TimeDelayed.c_", false]], "causal_ (mvpy.estimators.b2b.b2b attribute)": [[17, "mvpy.estimators.b2b.B2B.causal_", false]], "classes_ (mvpy.estimators.classifier.classifier attribute)": [[17, "mvpy.estimators.classifier.Classifier.classes_", false]], "classifier (class in mvpy.estimators.classifier)": [[17, "mvpy.estimators.classifier.Classifier", false]], "clone() (mvpy.estimators.b2b.b2b method)": [[17, "mvpy.estimators.b2b.B2B.clone", false]], "clone() (mvpy.estimators.classifier.classifier method)": [[17, "mvpy.estimators.classifier.Classifier.clone", false]], "clone() (mvpy.estimators.covariance.covariance method)": [[17, "mvpy.estimators.covariance.Covariance.clone", false]], "clone() (mvpy.estimators.decoder.decoder method)": [[17, "mvpy.estimators.decoder.Decoder.clone", false]], "clone() (mvpy.estimators.encoder.encoder method)": [[17, "mvpy.estimators.encoder.Encoder.clone", false]], "clone() (mvpy.estimators.ridgecv.ridgecv method)": [[17, "mvpy.estimators.ridgecv.RidgeCV.clone", false]], "clone() (mvpy.estimators.rsa.rsa method)": [[17, "mvpy.estimators.rsa.RSA.clone", false]], "clone() (mvpy.estimators.scaler.scaler method)": [[17, "mvpy.estimators.scaler.Scaler.clone", false]], "clone() (mvpy.estimators.sliding.sliding method)": [[17, "mvpy.estimators.sliding.Sliding.clone", false]], "clone() (mvpy.estimators.timedelayed.timedelayed method)": [[17, "mvpy.estimators.timedelayed.TimeDelayed.clone", false]], "coef_ (mvpy.estimators.classifier.classifier attribute)": [[17, "mvpy.estimators.classifier.Classifier.coef_", false]], "coef_ (mvpy.estimators.decoder.decoder attribute)": [[17, "mvpy.estimators.decoder.Decoder.coef_", false]], "coef_ (mvpy.estimators.encoder.encoder attribute)": [[17, "mvpy.estimators.encoder.Encoder.coef_", false]], "coef_ (mvpy.estimators.ridgecv.ridgecv attribute)": [[17, "mvpy.estimators.ridgecv.RidgeCV.coef_", false]], "coef_ (mvpy.estimators.timedelayed.timedelayed attribute)": [[17, "mvpy.estimators.timedelayed.TimeDelayed.coef_", false]], "collect() (mvpy.estimators.sliding.sliding method)": [[17, "mvpy.estimators.sliding.Sliding.collect", false]], "copy() (mvpy.estimators.scaler.scaler method)": [[17, "mvpy.estimators.scaler.Scaler.copy", false]], "cosine() (in module mvpy.math.cosine)": [[18, "mvpy.math.cosine.cosine", false]], "cosine_d() (in module mvpy.math.cosine)": [[18, "mvpy.math.cosine.cosine_d", false]], "covariance (class in mvpy.estimators.covariance)": [[17, "mvpy.estimators.covariance.Covariance", false]], "covariance_ (mvpy.estimators.covariance.covariance attribute)": [[17, "mvpy.estimators.covariance.Covariance.covariance_", false]], "cv_euclidean() (in module mvpy.math.crossvalidated)": [[18, "mvpy.math.crossvalidated.cv_euclidean", false]], "cv_mahalanobis() (in module mvpy.math.crossvalidated)": [[18, "mvpy.math.crossvalidated.cv_mahalanobis", false]], "cx_ (mvpy.estimators.rsa.rsa attribute)": [[17, "mvpy.estimators.rsa.RSA.cx_", false]], "cy_ (mvpy.estimators.rsa.rsa attribute)": [[17, "mvpy.estimators.rsa.RSA.cy_", false]], "decoder (class in mvpy.estimators.decoder)": [[17, "mvpy.estimators.decoder.Decoder", false]], "decoder_ (mvpy.estimators.b2b.b2b attribute)": [[17, "mvpy.estimators.b2b.B2B.decoder_", false]], "dims (mvpy.estimators.sliding.sliding attribute)": [[17, "mvpy.estimators.sliding.Sliding.dims", false]], "encoder (class in mvpy.estimators.encoder)": [[17, "mvpy.estimators.encoder.Encoder", false]], "encoder_ (mvpy.estimators.b2b.b2b attribute)": [[17, "mvpy.estimators.b2b.B2B.encoder_", false]], "estimator (mvpy.estimators.encoder.encoder attribute)": [[17, "mvpy.estimators.encoder.Encoder.estimator", false]], "estimator (mvpy.estimators.rsa.rsa attribute)": [[17, "mvpy.estimators.rsa.RSA.estimator", false]], "estimator (mvpy.estimators.sliding.sliding attribute)": [[17, "mvpy.estimators.sliding.Sliding.estimator", false]], "estimator (mvpy.estimators.timedelayed.timedelayed attribute)": [[17, "mvpy.estimators.timedelayed.TimeDelayed.estimator", false]], "estimator_ (mvpy.estimators.classifier.classifier attribute)": [[17, "mvpy.estimators.classifier.Classifier.estimator_", false]], "estimator_ (mvpy.estimators.decoder.decoder attribute)": [[17, "mvpy.estimators.decoder.Decoder.estimator_", false]], "estimators_ (mvpy.estimators.classifier.classifier attribute)": [[17, "mvpy.estimators.classifier.Classifier.estimators_", false]], "estimators_ (mvpy.estimators.sliding.sliding attribute)": [[17, "mvpy.estimators.sliding.Sliding.estimators_", false]], "euclidean() (in module mvpy.math.euclidean)": [[18, "mvpy.math.euclidean.euclidean", false]], "f_ (mvpy.estimators.timedelayed.timedelayed attribute)": [[17, "mvpy.estimators.timedelayed.TimeDelayed.f_", false]], "fit() (mvpy.estimators.b2b.b2b method)": [[17, "mvpy.estimators.b2b.B2B.fit", false]], "fit() (mvpy.estimators.classifier.classifier method)": [[17, "mvpy.estimators.classifier.Classifier.fit", false]], "fit() (mvpy.estimators.covariance.covariance method)": [[17, "mvpy.estimators.covariance.Covariance.fit", false]], "fit() (mvpy.estimators.decoder.decoder method)": [[17, "mvpy.estimators.decoder.Decoder.fit", false]], "fit() (mvpy.estimators.encoder.encoder method)": [[17, "mvpy.estimators.encoder.Encoder.fit", false]], "fit() (mvpy.estimators.ridgecv.ridgecv method)": [[17, "mvpy.estimators.ridgecv.RidgeCV.fit", false]], "fit() (mvpy.estimators.rsa.rsa method)": [[17, "mvpy.estimators.rsa.RSA.fit", false]], "fit() (mvpy.estimators.scaler.scaler method)": [[17, "mvpy.estimators.scaler.Scaler.fit", false]], "fit() (mvpy.estimators.sliding.sliding method)": [[17, "mvpy.estimators.sliding.Sliding.fit", false]], "fit() (mvpy.estimators.timedelayed.timedelayed method)": [[17, "mvpy.estimators.timedelayed.TimeDelayed.fit", false]], "fit_intercept (mvpy.estimators.b2b.b2b attribute)": [[17, "mvpy.estimators.b2b.B2B.fit_intercept", false]], "fit_transform() (mvpy.estimators.covariance.covariance method)": [[17, "mvpy.estimators.covariance.Covariance.fit_transform", false]], "fit_transform() (mvpy.estimators.rsa.rsa method)": [[17, "mvpy.estimators.rsa.RSA.fit_transform", false]], "fit_transform() (mvpy.estimators.scaler.scaler method)": [[17, "mvpy.estimators.scaler.Scaler.fit_transform", false]], "fit_transform() (mvpy.estimators.sliding.sliding method)": [[17, "mvpy.estimators.sliding.Sliding.fit_transform", false]], "fs (mvpy.estimators.timedelayed.timedelayed attribute)": [[17, "mvpy.estimators.timedelayed.TimeDelayed.fs", false]], "full_rdm() (mvpy.estimators.rsa.rsa method)": [[17, "mvpy.estimators.rsa.RSA.full_rdm", false]], "grouped (mvpy.estimators.rsa.rsa attribute)": [[17, "mvpy.estimators.rsa.RSA.grouped", false]], "intercept_ (mvpy.estimators.classifier.classifier attribute)": [[17, "mvpy.estimators.classifier.Classifier.intercept_", false]], "intercept_ (mvpy.estimators.decoder.decoder attribute)": [[17, "mvpy.estimators.decoder.Decoder.intercept_", false]], "intercept_ (mvpy.estimators.encoder.encoder attribute)": [[17, "mvpy.estimators.encoder.Encoder.intercept_", false]], "intercept_ (mvpy.estimators.ridgecv.ridgecv attribute)": [[17, "mvpy.estimators.ridgecv.RidgeCV.intercept_", false]], "intercept_ (mvpy.estimators.timedelayed.timedelayed attribute)": [[17, "mvpy.estimators.timedelayed.TimeDelayed.intercept_", false]], "inverse_transform() (mvpy.estimators.scaler.scaler method)": [[17, "mvpy.estimators.scaler.Scaler.inverse_transform", false]], "kwargs (mvpy.estimators.encoder.encoder attribute)": [[17, "mvpy.estimators.encoder.Encoder.kwargs", false]], "kwargs (mvpy.estimators.timedelayed.timedelayed attribute)": [[17, "mvpy.estimators.timedelayed.TimeDelayed.kwargs", false]], "mahalanobis() (in module mvpy.math.mahalanobis)": [[18, "mvpy.math.mahalanobis.mahalanobis", false]], "mean_ (mvpy.estimators.scaler.scaler attribute)": [[17, "mvpy.estimators.scaler.Scaler.mean_", false]], "module": [[16, "module-mvpy", false], [17, "module-mvpy.estimators", false], [17, "module-mvpy.estimators.b2b", false], [17, "module-mvpy.estimators.classifier", false], [17, "module-mvpy.estimators.covariance", false], [17, "module-mvpy.estimators.decoder", false], [17, "module-mvpy.estimators.encoder", false], [17, "module-mvpy.estimators.ridgecv", false], [17, "module-mvpy.estimators.rsa", false], [17, "module-mvpy.estimators.scaler", false], [17, "module-mvpy.estimators.sliding", false], [17, "module-mvpy.estimators.timedelayed", false], [18, "module-mvpy.math", false], [18, "module-mvpy.math.accuracy", false], [18, "module-mvpy.math.cosine", false], [18, "module-mvpy.math.crossvalidated", false], [18, "module-mvpy.math.euclidean", false], [18, "module-mvpy.math.mahalanobis", false], [18, "module-mvpy.math.pearsonr", false], [18, "module-mvpy.math.rank", false], [18, "module-mvpy.math.roc_auc", false], [18, "module-mvpy.math.spearmanr", false], [19, "module-mvpy.signal", false], [20, "module-mvpy.utilities", false], [20, "module-mvpy.utilities.progressbar", false]], "mvpy": [[16, "module-mvpy", false]], "mvpy.estimators": [[17, "module-mvpy.estimators", false]], "mvpy.estimators.b2b": [[17, "module-mvpy.estimators.b2b", false]], "mvpy.estimators.classifier": [[17, "module-mvpy.estimators.classifier", false]], "mvpy.estimators.covariance": [[17, "module-mvpy.estimators.covariance", false]], "mvpy.estimators.decoder": [[17, "module-mvpy.estimators.decoder", false]], "mvpy.estimators.encoder": [[17, "module-mvpy.estimators.encoder", false]], "mvpy.estimators.ridgecv": [[17, "module-mvpy.estimators.ridgecv", false]], "mvpy.estimators.rsa": [[17, "module-mvpy.estimators.rsa", false]], "mvpy.estimators.scaler": [[17, "module-mvpy.estimators.scaler", false]], "mvpy.estimators.sliding": [[17, "module-mvpy.estimators.sliding", false]], "mvpy.estimators.timedelayed": [[17, "module-mvpy.estimators.timedelayed", false]], "mvpy.math": [[18, "module-mvpy.math", false]], "mvpy.math.accuracy": [[18, "module-mvpy.math.accuracy", false]], "mvpy.math.cosine": [[18, "module-mvpy.math.cosine", false]], "mvpy.math.crossvalidated": [[18, "module-mvpy.math.crossvalidated", false]], "mvpy.math.euclidean": [[18, "module-mvpy.math.euclidean", false]], "mvpy.math.mahalanobis": [[18, "module-mvpy.math.mahalanobis", false]], "mvpy.math.pearsonr": [[18, "module-mvpy.math.pearsonr", false]], "mvpy.math.rank": [[18, "module-mvpy.math.rank", false]], "mvpy.math.roc_auc": [[18, "module-mvpy.math.roc_auc", false]], "mvpy.math.spearmanr": [[18, "module-mvpy.math.spearmanr", false]], "mvpy.signal": [[19, "module-mvpy.signal", false]], "mvpy.utilities": [[20, "module-mvpy.utilities", false]], "mvpy.utilities.progressbar": [[20, "module-mvpy.utilities.progressbar", false]], "n_jobs (mvpy.estimators.rsa.rsa attribute)": [[17, "mvpy.estimators.rsa.RSA.n_jobs", false]], "normalise (mvpy.estimators.b2b.b2b attribute)": [[17, "mvpy.estimators.b2b.B2B.normalise", false]], "normalise_decoder (mvpy.estimators.b2b.b2b attribute)": [[17, "mvpy.estimators.b2b.B2B.normalise_decoder", false]], "pattern_ (mvpy.estimators.b2b.b2b attribute)": [[17, "mvpy.estimators.b2b.B2B.pattern_", false]], "pattern_ (mvpy.estimators.classifier.classifier attribute)": [[17, "mvpy.estimators.classifier.Classifier.pattern_", false]], "pattern_ (mvpy.estimators.decoder.decoder attribute)": [[17, "mvpy.estimators.decoder.Decoder.pattern_", false]], "pattern_ (mvpy.estimators.timedelayed.timedelayed attribute)": [[17, "mvpy.estimators.timedelayed.TimeDelayed.pattern_", false]], "patterns (mvpy.estimators.timedelayed.timedelayed attribute)": [[17, "mvpy.estimators.timedelayed.TimeDelayed.patterns", false]], "pearsonr() (in module mvpy.math.pearsonr)": [[18, "mvpy.math.pearsonr.pearsonr", false]], "pearsonr_d() (in module mvpy.math.pearsonr)": [[18, "mvpy.math.pearsonr.pearsonr_d", false]], "precision_ (mvpy.estimators.covariance.covariance attribute)": [[17, "mvpy.estimators.covariance.Covariance.precision_", false]], "predict() (mvpy.estimators.b2b.b2b method)": [[17, "mvpy.estimators.b2b.B2B.predict", false]], "predict() (mvpy.estimators.classifier.classifier method)": [[17, "mvpy.estimators.classifier.Classifier.predict", false]], "predict() (mvpy.estimators.decoder.decoder method)": [[17, "mvpy.estimators.decoder.Decoder.predict", false]], "predict() (mvpy.estimators.encoder.encoder method)": [[17, "mvpy.estimators.encoder.Encoder.predict", false]], "predict() (mvpy.estimators.ridgecv.ridgecv method)": [[17, "mvpy.estimators.ridgecv.RidgeCV.predict", false]], "predict() (mvpy.estimators.sliding.sliding method)": [[17, "mvpy.estimators.sliding.Sliding.predict", false]], "predict() (mvpy.estimators.timedelayed.timedelayed method)": [[17, "mvpy.estimators.timedelayed.TimeDelayed.predict", false]], "predict_proba() (mvpy.estimators.classifier.classifier method)": [[17, "mvpy.estimators.classifier.Classifier.predict_proba", false]], "predict_proba() (mvpy.estimators.sliding.sliding method)": [[17, "mvpy.estimators.sliding.Sliding.predict_proba", false]], "progressbar (class in mvpy.utilities.progressbar)": [[20, "mvpy.utilities.progressbar.Progressbar", false]], "rank() (in module mvpy.math.rank)": [[18, "mvpy.math.rank.rank", false]], "rdm_ (mvpy.estimators.rsa.rsa attribute)": [[17, "mvpy.estimators.rsa.RSA.rdm_", false]], "ridgecv (class in mvpy.estimators.ridgecv)": [[17, "mvpy.estimators.ridgecv.RidgeCV", false]], "roc_auc() (in module mvpy.math.roc_auc)": [[18, "mvpy.math.roc_auc.roc_auc", false]], "rsa (class in mvpy.estimators.rsa)": [[17, "mvpy.estimators.rsa.RSA", false]], "scale_ (mvpy.estimators.scaler.scaler attribute)": [[17, "mvpy.estimators.scaler.Scaler.scale_", false]], "scaler (class in mvpy.estimators.scaler)": [[17, "mvpy.estimators.scaler.Scaler", false]], "scaler_ (mvpy.estimators.b2b.b2b attribute)": [[17, "mvpy.estimators.b2b.B2B.scaler_", false]], "set_fit_request() (mvpy.estimators.scaler.scaler method)": [[17, "mvpy.estimators.scaler.Scaler.set_fit_request", false]], "shape_ (mvpy.estimators.scaler.scaler attribute)": [[17, "mvpy.estimators.scaler.Scaler.shape_", false]], "shrinkage_ (mvpy.estimators.covariance.covariance attribute)": [[17, "mvpy.estimators.covariance.Covariance.shrinkage_", false]], "sliding (class in mvpy.estimators.sliding)": [[17, "mvpy.estimators.sliding.Sliding", false]], "spearmanr() (in module mvpy.math.spearmanr)": [[18, "mvpy.math.spearmanr.spearmanr", false]], "spearmanr_d() (in module mvpy.math.spearmanr)": [[18, "mvpy.math.spearmanr.spearmanr_d", false]], "t_max (mvpy.estimators.timedelayed.timedelayed attribute)": [[17, "mvpy.estimators.timedelayed.TimeDelayed.t_max", false]], "t_min (mvpy.estimators.timedelayed.timedelayed attribute)": [[17, "mvpy.estimators.timedelayed.TimeDelayed.t_min", false]], "timedelayed (class in mvpy.estimators.timedelayed)": [[17, "mvpy.estimators.timedelayed.TimeDelayed", false]], "to_numpy() (mvpy.estimators.covariance.covariance method)": [[17, "mvpy.estimators.covariance.Covariance.to_numpy", false]], "to_numpy() (mvpy.estimators.rsa.rsa method)": [[17, "mvpy.estimators.rsa.RSA.to_numpy", false]], "to_numpy() (mvpy.estimators.scaler.scaler method)": [[17, "mvpy.estimators.scaler.Scaler.to_numpy", false]], "to_torch() (mvpy.estimators.covariance.covariance method)": [[17, "mvpy.estimators.covariance.Covariance.to_torch", false]], "to_torch() (mvpy.estimators.rsa.rsa method)": [[17, "mvpy.estimators.rsa.RSA.to_torch", false]], "to_torch() (mvpy.estimators.scaler.scaler method)": [[17, "mvpy.estimators.scaler.Scaler.to_torch", false]], "top (mvpy.estimators.sliding.sliding attribute)": [[17, "mvpy.estimators.sliding.Sliding.top", false]], "tqdm_joblib() (in module mvpy.utilities.progressbar)": [[20, "mvpy.utilities.progressbar.tqdm_joblib", false]], "transform() (mvpy.estimators.covariance.covariance method)": [[17, "mvpy.estimators.covariance.Covariance.transform", false]], "transform() (mvpy.estimators.rsa.rsa method)": [[17, "mvpy.estimators.rsa.RSA.transform", false]], "transform() (mvpy.estimators.scaler.scaler method)": [[17, "mvpy.estimators.scaler.Scaler.transform", false]], "transform() (mvpy.estimators.sliding.sliding method)": [[17, "mvpy.estimators.sliding.Sliding.transform", false]], "var_ (mvpy.estimators.scaler.scaler attribute)": [[17, "mvpy.estimators.scaler.Scaler.var_", false]], "verbose (mvpy.estimators.rsa.rsa attribute)": [[17, "mvpy.estimators.rsa.RSA.verbose", false]], "verbose (mvpy.estimators.sliding.sliding attribute)": [[17, "mvpy.estimators.sliding.Sliding.verbose", false]], "w_ (mvpy.estimators.timedelayed.timedelayed attribute)": [[17, "mvpy.estimators.timedelayed.TimeDelayed.w_", false]], "whitener_ (mvpy.estimators.covariance.covariance attribute)": [[17, "mvpy.estimators.covariance.Covariance.whitener_", false]], "window (mvpy.estimators.timedelayed.timedelayed attribute)": [[17, "mvpy.estimators.timedelayed.TimeDelayed.window", false]]}, "objects": {"": [[16, 0, 0, "-", "mvpy"]], "mvpy": [[17, 0, 0, "-", "estimators"], [18, 0, 0, "-", "math"], [19, 0, 0, "-", "signal"], [20, 0, 0, "-", "utilities"]], "mvpy.estimators": [[17, 0, 0, "-", "b2b"], [17, 0, 0, "-", "classifier"], [17, 0, 0, "-", "covariance"], [17, 0, 0, "-", "decoder"], [17, 0, 0, "-", "encoder"], [17, 0, 0, "-", "ridgecv"], [17, 0, 0, "-", "rsa"], [17, 0, 0, "-", "scaler"], [17, 0, 0, "-", "sliding"], [17, 0, 0, "-", "timedelayed"]], "mvpy.estimators.b2b": [[17, 1, 1, "", "B2B"]], "mvpy.estimators.b2b.B2B": [[17, 2, 1, "", "alpha_per_target"], [17, 2, 1, "", "alphas"], [17, 2, 1, "", "causal_"], [17, 3, 1, "", "clone"], [17, 2, 1, "", "decoder_"], [17, 2, 1, "", "encoder_"], [17, 3, 1, "", "fit"], [17, 2, 1, "", "fit_intercept"], [17, 2, 1, "", "normalise"], [17, 2, 1, "", "normalise_decoder"], [17, 2, 1, "", "pattern_"], [17, 3, 1, "", "predict"], [17, 2, 1, "", "scaler_"]], "mvpy.estimators.classifier": [[17, 1, 1, "", "Classifier"]], "mvpy.estimators.classifier.Classifier": [[17, 2, 1, "", "classes_"], [17, 3, 1, "", "clone"], [17, 2, 1, "", "coef_"], [17, 2, 1, "", "estimator_"], [17, 2, 1, "", "estimators_"], [17, 3, 1, "", "fit"], [17, 2, 1, "", "intercept_"], [17, 2, 1, "", "pattern_"], [17, 3, 1, "", "predict"], [17, 3, 1, "", "predict_proba"]], "mvpy.estimators.covariance": [[17, 1, 1, "", "Covariance"]], "mvpy.estimators.covariance.Covariance": [[17, 3, 1, "", "clone"], [17, 2, 1, "", "covariance_"], [17, 3, 1, "", "fit"], [17, 3, 1, "", "fit_transform"], [17, 2, 1, "", "precision_"], [17, 2, 1, "", "shrinkage_"], [17, 3, 1, "", "to_numpy"], [17, 3, 1, "", "to_torch"], [17, 3, 1, "", "transform"], [17, 2, 1, "", "whitener_"]], "mvpy.estimators.decoder": [[17, 1, 1, "", "Decoder"]], "mvpy.estimators.decoder.Decoder": [[17, 2, 1, "", "alpha_"], [17, 3, 1, "", "clone"], [17, 2, 1, "", "coef_"], [17, 2, 1, "", "estimator_"], [17, 3, 1, "", "fit"], [17, 2, 1, "", "intercept_"], [17, 2, 1, "", "pattern_"], [17, 3, 1, "", "predict"]], "mvpy.estimators.encoder": [[17, 1, 1, "", "Encoder"]], "mvpy.estimators.encoder.Encoder": [[17, 2, 1, "", "alphas"], [17, 3, 1, "", "clone"], [17, 2, 1, "", "coef_"], [17, 2, 1, "", "estimator"], [17, 3, 1, "", "fit"], [17, 2, 1, "", "intercept_"], [17, 2, 1, "", "kwargs"], [17, 3, 1, "", "predict"]], "mvpy.estimators.ridgecv": [[17, 1, 1, "", "RidgeCV"]], "mvpy.estimators.ridgecv.RidgeCV": [[17, 2, 1, "", "alpha_"], [17, 3, 1, "", "clone"], [17, 2, 1, "", "coef_"], [17, 3, 1, "", "fit"], [17, 2, 1, "", "intercept_"], [17, 3, 1, "", "predict"]], "mvpy.estimators.rsa": [[17, 1, 1, "", "RSA"]], "mvpy.estimators.rsa.RSA": [[17, 3, 1, "", "clone"], [17, 2, 1, "", "cx_"], [17, 2, 1, "", "cy_"], [17, 2, 1, "", "estimator"], [17, 3, 1, "", "fit"], [17, 3, 1, "", "fit_transform"], [17, 3, 1, "", "full_rdm"], [17, 2, 1, "", "grouped"], [17, 2, 1, "", "n_jobs"], [17, 2, 1, "", "rdm_"], [17, 3, 1, "", "to_numpy"], [17, 3, 1, "", "to_torch"], [17, 3, 1, "", "transform"], [17, 2, 1, "", "verbose"]], "mvpy.estimators.scaler": [[17, 1, 1, "", "Scaler"]], "mvpy.estimators.scaler.Scaler": [[17, 3, 1, "", "clone"], [17, 3, 1, "", "copy"], [17, 3, 1, "", "fit"], [17, 3, 1, "", "fit_transform"], [17, 3, 1, "", "inverse_transform"], [17, 2, 1, "", "mean_"], [17, 2, 1, "", "scale_"], [17, 3, 1, "", "set_fit_request"], [17, 2, 1, "", "shape_"], [17, 3, 1, "", "to_numpy"], [17, 3, 1, "", "to_torch"], [17, 3, 1, "", "transform"], [17, 2, 1, "", "var_"]], "mvpy.estimators.sliding": [[17, 1, 1, "", "Sliding"]], "mvpy.estimators.sliding.Sliding": [[17, 3, 1, "", "clone"], [17, 3, 1, "", "collect"], [17, 2, 1, "", "dims"], [17, 2, 1, "", "estimator"], [17, 2, 1, "", "estimators_"], [17, 3, 1, "", "fit"], [17, 3, 1, "", "fit_transform"], [17, 3, 1, "", "predict"], [17, 3, 1, "", "predict_proba"], [17, 2, 1, "", "top"], [17, 3, 1, "", "transform"], [17, 2, 1, "", "verbose"]], "mvpy.estimators.timedelayed": [[17, 1, 1, "", "TimeDelayed"]], "mvpy.estimators.timedelayed.TimeDelayed": [[17, 2, 1, "", "alphas"], [17, 2, 1, "", "c_"], [17, 3, 1, "", "clone"], [17, 2, 1, "", "coef_"], [17, 2, 1, "", "estimator"], [17, 2, 1, "", "f_"], [17, 3, 1, "", "fit"], [17, 2, 1, "", "fs"], [17, 2, 1, "", "intercept_"], [17, 2, 1, "", "kwargs"], [17, 2, 1, "", "pattern_"], [17, 2, 1, "", "patterns"], [17, 3, 1, "", "predict"], [17, 2, 1, "", "t_max"], [17, 2, 1, "", "t_min"], [17, 2, 1, "", "w_"], [17, 2, 1, "", "window"]], "mvpy.math": [[18, 0, 0, "-", "accuracy"], [18, 0, 0, "-", "cosine"], [18, 0, 0, "-", "crossvalidated"], [18, 0, 0, "-", "euclidean"], [18, 0, 0, "-", "mahalanobis"], [18, 0, 0, "-", "pearsonr"], [18, 0, 0, "-", "rank"], [18, 0, 0, "-", "roc_auc"], [18, 0, 0, "-", "spearmanr"]], "mvpy.math.accuracy": [[18, 4, 1, "", "accuracy"]], "mvpy.math.cosine": [[18, 4, 1, "", "cosine"], [18, 4, 1, "", "cosine_d"]], "mvpy.math.crossvalidated": [[18, 4, 1, "", "cv_euclidean"], [18, 4, 1, "", "cv_mahalanobis"]], "mvpy.math.euclidean": [[18, 4, 1, "", "euclidean"]], "mvpy.math.mahalanobis": [[18, 4, 1, "", "mahalanobis"]], "mvpy.math.pearsonr": [[18, 4, 1, "", "pearsonr"], [18, 4, 1, "", "pearsonr_d"]], "mvpy.math.rank": [[18, 4, 1, "", "rank"]], "mvpy.math.roc_auc": [[18, 4, 1, "", "roc_auc"]], "mvpy.math.spearmanr": [[18, 4, 1, "", "spearmanr"], [18, 4, 1, "", "spearmanr_d"]], "mvpy.utilities": [[20, 0, 0, "-", "progressbar"]], "mvpy.utilities.progressbar": [[20, 1, 1, "", "Progressbar"], [20, 4, 1, "", "tqdm_joblib"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function"}, "terms": {"": [1, 8, 17, 18], "0": [1, 3, 4, 6, 8, 9, 11, 12, 14, 17, 18], "00": [1, 6, 8, 11, 12, 14, 17], "000": 12, "0000": [17, 18], "0000e": 17, "00096": 17, "001": [4, 6, 9, 11, 14], "002": [1, 8], "004": 17, "0060": 17, "00604": 17, "0085": 17, "00g": 8, "01": [3, 8, 14, 17], "012": 18, "01371": 18, "01g": 8, "02": [8, 17], "02g": 8, "03": [8, 17], "0347": 17, "03g": 8, "04": [8, 17], "04g": 8, "04m34": 8, "05": [8, 11, 14, 17], "05g": 8, "06": [8, 14, 17], "067": 17, "0691e": 17, "06g": 8, "07": [8, 17], "0728": 17, "07g": 8, "08": [3, 8, 14, 17], "0828": 17, "08g": 8, "09": [8, 17], "09g": 8, "0m": 8, "0mb": 8, "1": [2, 3, 6, 7, 10, 11, 14, 17, 18], "10": [1, 8, 17, 18], "100": [8, 17, 18], "1000": 17, "100m": 1, "1016": [17, 18], "101m": 8, "103m": 8, "104m": 8, "106m": 8, "107m": 8, "109m": 8, "10g": 8, "11": [1, 8, 17], "110": 17, "111m": 8, "113m": 8, "116m": 8, "117028": 17, "118m": 8, "11g": 8, "12": [1, 8, 17, 18], "120m": 8, "121m": 8, "123m": 8, "126m": 8, "1274": 17, "1288e": 17, "129m": 8, "12g": 8, "13": [1, 8, 17], "130m": 8, "133m": 8, "136m": 8, "137": 18, "137m": 8, "139m": 8, "13g": 8, "14": [1, 8, 17], "1400": 17, "140m": 8, "143m": 8, "1452": 17, "146m": 8, "1478": 8, "1479": 8, "1480": 8, "1481": 8, "1482": 8, "1486": 8, "1492": 8, "1493": 8, "1499": 8, "149m": 8, "14g": 8, "15": [1, 8, 17], "150": 17, "1504": 8, "1505": 8, "1518": 8, "1520": 8, "1521": 8, "1525": 8, "152m": 8, "1539": 8, "153m": 8, "156m": 8, "1585e": 17, "159m": 8, "15g": 8, "16": [1, 8, 17], "1607": 18, "160m": 8, "162m": 8, "163m": 8, "1657": 8, "1659": 8, "1669": 8, "166m": 8, "169m": 8, "16g": 8, "17": [1, 8, 11, 14, 17], "1709": 8, "1713": 8, "172m": 8, "1730": 8, "1742": 8, "1743": 8, "1745": 8, "1749": 8, "1752": 8, "1754": 8, "1757": 8, "1758": 8, "175m": 8, "1761": 8, "1763": 8, "1768": 8, "1770": 8, "1771": 8, "1772": 8, "1774": 8, "1777": 8, "1778": 8, "1779": 8, "1780": 8, "1781": 8, "1782": 8, "1784": 8, "1785": 8, "1787": 8, "1788": 8, "1790": 8, "1791": 8, "1792": 8, "1793": [8, 17], "1794": 8, "1795": 8, "1796": 8, "1798": 8, "179m": 8, "17g": 8, "18": [1, 8, 17], "1800": 8, "1803": 8, "1805": 8, "1806": 8, "1807": 8, "1808": 8, "1810": 8, "1812": 8, "1814": 8, "1815": 8, "1817": 8, "1818": 8, "1819": 8, "181m": 8, "1820": 8, "1821": 8, "1823": 8, "1824": 8, "1825": 8, "1826": 8, "1827": 8, "1830": 8, "1831": 8, "1832": 8, "1833": 8, "1836": 8, "1837": 8, "1838": 8, "183m": 8, "185m": 8, "186m": 8, "188": 18, "188m": 8, "189m": 8, "18g": 8, "19": [1, 8, 17], "191m": 8, "192m": 8, "1946": 8, "194m": 8, "1959": 8, "196m": 8, "198m": 8, "199m": 8, "19g": 8, "1_decoders_intro": [1, 3, 14], "1_rsa_intro": [8, 11, 14], "1e": [1, 8, 17], "1m": 8, "1mb": 8, "2": [1, 7, 8, 10, 11, 14, 17, 18], "20": [1, 8, 17], "200": [1, 8, 18], "2001": 8, "2004": 17, "2007": 8, "2008": 17, "2011": [8, 17], "2013": [8, 17], "2014": 17, "2015": 18, "2016": [8, 17, 18], "201m": 8, "2020": 17, "202m": 8, "204": 1, "2047": 17, "204m": 8, "206m": 8, "208m": 8, "209m": 8, "20g": 8, "21": [1, 8, 17], "212m": 8, "215m": 8, "216m": 8, "219m": 8, "21g": 8, "22": [1, 8, 17], "220": 17, "222": [1, 8], "222m": 8, "223m": 8, "2251": 17, "225m": 8, "227m": 8, "229m": 8, "22g": 8, "23": [1, 8, 17], "230m": 8, "232m": 8, "2332": 17, "233m": 8, "235m": 8, "236m": 8, "238m": 8, "23g": 8, "24": [1, 8, 17], "240": 17, "240m": 8, "242m": 8, "243m": 8, "244": [1, 8], "245m": 8, "247m": 8, "2483": 17, "249m": 8, "24g": 8, "25": [1, 8], "250m": 8, "2510": 17, "252m": 8, "253m": 8, "2549": 17, "255m": 8, "256m": 8, "258m": 8, "259x": 17, "25g": 8, "26": [1, 8, 14, 17], "260m": 8, "261m": 8, "263m": 8, "265m": 8, "267m": 8, "268m": 8, "26g": 8, "27": [1, 8, 17], "270m": 8, "2717": 17, "271m": 8, "273m": 8, "2743e": 17, "274m": 8, "2760": 8, "276m": 8, "278m": 8, "279m": 8, "27g": 8, "27m": 8, "27tb": 8, "28": [1, 8, 17], "2813e": 17, "281m": 8, "2825": 17, "2830": 17, "283m": 8, "286m": 8, "289m": 8, "28g": 8, "29": [1, 8, 17], "290m": 8, "292m": 8, "293m": 8, "2945": 17, "295m": 8, "297m": 8, "299m": 8, "29g": 8, "2_rsa_encod": [9, 11, 14], "2m": 8, "2mb": 8, "3": [1, 8, 17, 18], "30": [1, 8, 17], "300m": 8, "303m": 8, "306m": 8, "307m": 8, "309m": 8, "30g": 8, "31": [1, 8, 17], "310m": 8, "313m": 8, "314m": 8, "316m": 8, "317m": 8, "319m": 8, "31g": 8, "32": [1, 8, 17], "320m": 8, "323m": 8, "326m": 8, "329m": 8, "32g": 8, "33": [1, 8, 17], "330m": 8, "332m": 8, "333m": 8, "3357e": 17, "336m": 8, "3389": 17, "339m": 8, "33g": 8, "34": [1, 8, 17], "342m": 8, "3440": 17, "346m": 8, "348m": 8, "3491": 17, "349m": 8, "34g": 8, "35": [1, 8, 17], "351m": 8, "352m": 8, "3544": 17, "354m": 8, "356m": 8, "358m": 8, "3591": 17, "3598e": 17, "359m": 8, "35g": 8, "36": [1, 8, 17], "360": 1, "361m": 8, "362m": 8, "364m": 8, "365": 17, "366m": 8, "367m": 8, "3683": 17, "369m": 8, "36g": 8, "37": [1, 8, 17], "371m": 8, "372m": 8, "374m": 8, "376m": 8, "377m": 8, "379m": 8, "37g": 8, "38": [1, 8, 17], "3800": 17, "3817": 17, "381m": 8, "382m": 8, "384m": 8, "385m": 8, "387m": 8, "389m": 8, "38g": 8, "39": [1, 8, 17], "390m": 8, "392m": 8, "394m": 8, "395m": 8, "3962": 17, "397m": 8, "398m": 8, "39g": 8, "3d": 17, "3m": 8, "3mb": 8, "4": [1, 8, 14, 17, 18], "40": [1, 8, 17], "400m": 8, "402m": 8, "404m": 8, "405m": 8, "407m": 8, "408m": 8, "4097": 17, "40g": 8, "41": [1, 8, 17], "410m": 8, "411": 17, "412m": 8, "413m": 8, "4142": [1, 8], "415m": 8, "417m": 8, "419m": 8, "41g": 8, "42": [1, 8, 17], "421m": 8, "422m": 8, "424m": 8, "425m": 8, "427m": 8, "429m": 8, "42g": 8, "43": [1, 8, 17], "430m": 8, "432m": 8, "434m": 8, "435m": 8, "437m": 8, "4384e": 17, "438m": 8, "43g": 8, "44": [1, 8, 17], "440m": 8, "4418": 17, "442m": 8, "443m": 8, "4449": 17, "4454": 17, "445m": 8, "4470": 17, "447m": 8, "4489": 17, "448m": 8, "44g": 8, "45": [1, 8, 17], "450m": 8, "452m": 8, "453m": 8, "4556e": 17, "455m": 8, "457m": 8, "458m": 8, "4594": 17, "45g": 8, "46": [1, 8, 17], "461m": 8, "464m": 8, "465m": 8, "468m": 8, "46g": 8, "47": [1, 8, 17], "471m": 8, "474m": 8, "475m": 8, "478m": 8, "47g": 8, "48": [1, 8, 17], "481m": 8, "484m": 8, "4854": 17, "48550": 18, "485m": 8, "488m": 8, "48g": 8, "49": [1, 8], "491m": 8, "494m": 8, "4950": 17, "495m": 8, "4965": 17, "4978": 17, "498m": 8, "49g": 8, "4m": 8, "4mb": 8, "5": [1, 8, 17, 18], "50": [1, 8, 17, 18], "500": [1, 8], "5000": 18, "500m": 1, "501m": 8, "504m": 8, "507m": 8, "508m": 8, "50g": 8, "51": [1, 8], "511m": 8, "514m": 8, "517m": 8, "518m": 8, "51g": 8, "52": [1, 8], "5206": 17, "521m": 8, "524m": 8, "527m": 8, "528m": 8, "52g": 8, "53": [1, 8], "531m": 8, "5346": 17, "534m": 8, "5374": 17, "537m": 8, "53g": 8, "54": [1, 8], "541m": 8, "544m": 8, "5468": 8, "548m": 8, "54g": 8, "55": [1, 8], "551m": 8, "554m": 8, "557m": 8, "558m": 8, "55g": 8, "56": [1, 8], "560m": 8, "561m": 8, "564m": 8, "5662": 17, "567m": 8, "568m": 8, "56g": 8, "56m": 8, "57": [1, 8], "5716": 17, "571m": 8, "574m": 8, "577m": 8, "578m": 8, "57g": 8, "58": [1, 8], "581m": 8, "5841": 17, "584m": 8, "585m": 8, "587m": 8, "588m": 8, "58g": 8, "59": [1, 8], "590m": 8, "591m": 8, "593m": 8, "594m": 8, "596m": 8, "598m": 8, "59g": 8, "59m": 8, "5m": 8, "5mb": 8, "6": [1, 8, 17, 18], "60": [1, 8, 17, 18], "600m": 8, "601": [1, 8], "601m": 8, "603m": 8, "604": 17, "604m": 8, "606m": 8, "608m": 8, "609m": 8, "60g": 8, "61": [1, 8], "6102": 17, "611m": 8, "613m": 8, "614m": 8, "616m": 8, "618m": 8, "619m": 8, "61g": 8, "62": [1, 8], "621m": 8, "6238e": 17, "623m": 8, "624m": 8, "6254": 17, "626m": 8, "627m": 8, "629m": 8, "62g": 8, "63": [1, 8], "631m": 8, "632m": 8, "634m": 8, "6367e": 17, "636m": 8, "638m": 8, "639m": 8, "63g": 8, "64": [1, 8], "641m": 8, "642m": 8, "644m": 8, "646m": 8, "648m": 8, "649m": 8, "64g": 8, "65": [1, 8], "651m": 8, "652m": 8, "654m": 8, "655m": 8, "659m": 8, "65g": 8, "66": [1, 8], "662m": 8, "665m": 8, "666m": 8, "668m": 8, "669m": 8, "66g": 8, "67": [1, 8], "672m": 8, "675m": 8, "676m": 8, "678m": 8, "679m": 8, "67g": 8, "68": [1, 8], "682m": 8, "685m": 8, "686m": 8, "688m": 8, "689m": 8, "68g": 8, "69": [1, 8], "692m": 8, "6932": 17, "6939": 17, "695m": 8, "698m": 8, "699m": 8, "69g": 8, "6gb": [1, 8], "6m": 8, "6mb": 8, "6tb": 8, "7": [1, 8, 17], "70": [1, 8], "702m": 8, "7033": 17, "703m": 8, "705m": 8, "707m": 8, "708m": 8, "70g": 8, "71": [1, 8], "710m": 8, "712m": 8, "713m": 8, "715m": 8, "7168": 17, "716m": 8, "718m": 8, "71g": 8, "72": [1, 8], "720": 1, "720m": 8, "722m": 8, "723m": 8, "725m": 8, "726m": 8, "728m": 8, "729m": 8, "72g": 8, "73": [1, 8], "7301": 17, "731m": 8, "733m": 8, "734m": 8, "736m": 8, "737m": 8, "739m": 8, "73g": 8, "74": [1, 8], "741m": 8, "743m": 8, "744m": 8, "746m": 8, "749m": 8, "74g": 8, "75": [1, 8], "752": 14, "752m": 8, "753m": 8, "755m": 8, "756m": 8, "758m": 8, "759m": 8, "75g": 8, "75m": 8, "76": [1, 8], "7619": 17, "761m": 8, "763m": 8, "765m": 8, "766m": 8, "768m": 8, "769m": 8, "76g": 8, "77": [1, 8], "771m": 8, "773m": 8, "775m": 8, "776m": 8, "778m": 8, "779m": 8, "77g": 8, "78": [1, 8], "781m": 8, "783m": 8, "785m": 8, "786m": 8, "788m": 8, "789m": 8, "78g": 8, "79": [1, 8], "791m": 8, "7927e": 17, "792m": 8, "794m": 8, "796m": 8, "798m": 8, "799m": 8, "79g": 8, "79m": 8, "7mb": 8, "8": [1, 8, 17], "80": [1, 8], "801m": 8, "803m": 8, "804m": 8, "806m": 8, "808m": 8, "809m": 8, "80g": 8, "81": [1, 8], "810": [1, 3, 14], "811m": 8, "8130": 17, "813m": 8, "814m": 8, "816m": 8, "817m": 8, "8182": 17, "819m": 8, "81g": 8, "82": [1, 8], "821m": 8, "823m": 8, "824m": 8, "826m": 8, "827m": 8, "829m": 8, "82g": 8, "83": [1, 8], "831m": 8, "8329e": 17, "832m": 8, "8330e": 17, "834m": 8, "836m": 8, "837m": 8, "839m": 8, "83g": 8, "84": [1, 8], "841m": 8, "842m": 8, "844m": 8, "846m": 8, "8476e": 17, "848m": 8, "849m": 8, "84g": 8, "85": [1, 8], "851m": 8, "852m": 8, "854m": 8, "855m": 8, "857m": 8, "8587e": 17, "858m": 8, "85g": 8, "86": [1, 8], "861m": 8, "864m": 8, "865m": 8, "867m": 8, "8687": 17, "868m": 8, "86g": 8, "87": [1, 8, 17], "871m": 8, "872m": 8, "874m": 8, "875m": 8, "877m": 8, "878m": 8, "8793": 17, "87g": 8, "88": [1, 8, 17], "8802": 17, "881m": 8, "882m": 8, "884m": 8, "8854": 17, "885m": 8, "888m": 8, "88g": 8, "89": [1, 8], "891m": 8, "894m": 8, "895m": 8, "897m": 8, "898m": 8, "89g": 8, "8ejr": 8, "8m": 8, "8mb": 8, "9": [1, 8, 17, 18], "90": [1, 8], "901m": 8, "904m": 8, "908m": 8, "90g": 8, "91": [1, 8], "9101": 17, "911m": 8, "914m": 8, "915m": 8, "918m": 8, "91g": 8, "92": [1, 8], "921m": 8, "922m": 8, "924m": 8, "925m": 8, "9270": 17, "927m": 8, "928m": 8, "9290": 17, "92g": 8, "93": [1, 8], "930": 8, "9310": 17, "931m": 8, "932m": 8, "934m": 8, "935m": 8, "938m": 8, "93g": 8, "94": 8, "940": [8, 11, 14], "941m": 8, "944m": 8, "9453": 17, "945m": 8, "947m": 8, "948m": 8, "94g": 8, "95": 8, "9519e": 17, "951m": 8, "954m": 8, "958m": 8, "95g": 8, "96": [8, 17], "961m": 8, "962m": 8, "964m": 8, "965m": 8, "968m": 8, "96g": 8, "97": 8, "971m": 8, "974m": 8, "975m": 8, "9764e": 17, "978m": 8, "9790": 17, "97g": 8, "98": 8, "9808": 17, "981m": 8, "982m": 8, "984m": 8, "985m": 8, "988m": 8, "98g": 8, "99": 8, "991m": 8, "994m": 8, "995m": 8, "998m": 8, "99g": 8, "9m": 8, "9mb": 8, "A": [12, 17, 18], "As": 8, "Be": [1, 8], "By": 17, "For": [1, 8, 17, 18], "If": [0, 17], "In": [7, 10, 17, 18], "No": [1, 8], "Not": [1, 8], "On": [17, 18], "One": 17, "The": [1, 17], "To": [1, 8, 13, 17], "With": 8, "_": 17, "__doc__": [1, 8], "_classifierovr_torch": 17, "_must_": 17, "_scaler_numpi": 17, "_scaler_torch": 17, "_tsss_mc": [1, 8], "accuraci": [0, 1, 15, 16], "activ": [1, 8], "actual": 17, "ad": 17, "addit": [17, 20], "after": 17, "again": 8, "aim": 13, "akin": 17, "alia": 17, "alink": 18, "all": [1, 7, 14, 17], "allow": 17, "along": 18, "alpha": [0, 1, 16, 17], "alpha_": [0, 16, 17], "alpha_i": 17, "alpha_per_target": [0, 16, 17], "alpha_x": 17, "alreadi": 18, "also": [1, 8, 17, 18], "alwai": 18, "an": [1, 4, 8, 9, 17], "analaysi": 17, "analog": 17, "analysi": [0, 13, 17, 18], "ani": [17, 20], "anim": [1, 8], "append": [1, 4, 8, 9], "appli": [1, 8, 17], "approach": 17, "appropri": 17, "ar": [1, 8, 17, 18], "arang": [1, 8, 17], "arg": 17, "argmax": 8, "argument": [17, 20], "around": 17, "arrai": [1, 8, 17], "artifici": 8, "arxiv": 18, "assum": 17, "attempt": 8, "attr": 17, "attribut": 17, "auc": 18, "avail": [13, 17], "averag": [1, 18], "avoid": 17, "awar": [1, 8, 17], "ax": [1, 8], "axi": 1, "b": [1, 8, 17], "b2b": [0, 15, 16], "back": 17, "back2back": 17, "backend": [8, 17], "bad": [1, 8], "bar": [18, 20], "base": [8, 17, 20], "baseestim": 17, "baselin": [1, 8], "bednar": 17, "befor": [0, 8, 17], "begin": 1, "behaviour": 17, "between": [1, 8, 17, 18], "biass": 17, "bie\u00dfmann": 17, "binari": 18, "blankertz": 17, "bodypart": [1, 8], "bool": [17, 20], "branch": 17, "briefli": [1, 8], "bring": 1, "build": [1, 8], "built": 13, "c": [1, 8, 17], "c_": [0, 16, 17], "call": 17, "callabl": 17, "can": [0, 1, 8, 17, 20], "cannot": 17, "case": [17, 18], "cat": [17, 18], "categor": [1, 8], "categori": 8, "causal": 17, "causal_": [0, 16, 17], "cdot": 18, "center": 17, "ch_type": 1, "chanc": [1, 8], "chang": [1, 17], "channel": [1, 8, 17], "charton": 17, "cla": 17, "class": [8, 17, 18, 20], "classes_": [0, 16, 17], "classif": [2, 3, 7, 8, 14, 17], "classifi": [0, 1, 15, 16], "clf": 17, "clone": [0, 16, 17], "cmap": [8, 17], "code": [1, 4, 7, 8, 9, 17], "coef_": [0, 16, 17], "coefficeint": 17, "coeffici": 17, "collect": [0, 1, 16, 17], "color": [1, 8], "column": [1, 8], "com": 13, "combin": 1, "compar": 8, "complet": 8, "comput": [1, 7, 10, 17, 18], "concaten": 1, "concatenate_raw": [1, 8], "cond": [1, 8], "cond_tag": [1, 8], "condit": [1, 8, 17], "condition_typ": 8, "condition_vec": 8, "conduct": [7, 10], "configur": 8, "connect": 17, "consequ": [1, 17], "consid": [1, 17], "consist": 17, "constraint": 17, "consult": [1, 8], "content": [0, 8, 15], "context": 20, "continu": 17, "contribut": 17, "conv1d": 17, "conveni": [1, 8, 17], "convers": 17, "convert": 8, "copi": [0, 16, 17], "correct": [1, 8, 17], "correl": [8, 17, 18], "correspond": 8, "cosin": [0, 15, 16, 17], "cosine_d": [0, 16, 17, 18], "count": 8, "coupl": [7, 10], "cours": 1, "cov": 17, "covari": [0, 1, 15, 16, 18], "covariance_": [0, 16, 17, 18], "cpu": [1, 8], "creat": [1, 8, 17, 18], "cross": [1, 17, 18], "crossnobi": 18, "crossvalid": [0, 15, 16], "csv": [1, 8], "cuda": 8, "current": 17, "cv_euclidean": [0, 16, 17, 18], "cv_mahalanobi": [0, 16, 18], "cx_": [0, 16, 17], "cy_": [0, 16, 17], "d": [17, 18], "data": [1, 7, 8, 17, 18], "data_path": [1, 8], "dataset": [1, 8, 17], "decod": [0, 1, 3, 14, 15, 16], "decoder_": [0, 16, 17], "default": [8, 17, 20], "defin": [1, 8, 18], "degre": 17, "delai": 17, "desir": 1, "detail": 17, "deviat": 17, "devic": [1, 8], "di": [17, 18], "dict": [1, 8, 17], "did": 8, "diedrichsen": 18, "differ": [1, 17], "dim": [0, 1, 16, 17], "dimens": [1, 17, 18], "dimension": 17, "disabl": 20, "disentangl": 17, "dissimilar": 18, "distanc": 18, "distinct": 17, "distinguish": 1, "distribut": 18, "dive": 13, "do": [0, 1, 4, 8, 9, 17], "document": [1, 8], "doe": 17, "done": 17, "download": [1, 4, 7, 8, 9], "drop": [1, 8], "dtype": [1, 18], "dure": 18, "d\u00e4hne": 17, "e": [1, 17], "each": 17, "easi": 1, "effect": [8, 17], "either": [1, 17, 18], "ejaz": 18, "element": 18, "elimin": 18, "els": [1, 8], "empir": 17, "enabl": 20, "enable_metadata_rout": 17, "encod": [0, 6, 10, 11, 14, 15, 16, 18], "encoder_": [0, 16, 17], "encoders_intro": [4, 6, 14], "end": [1, 4, 8, 9], "ensur": 1, "enumer": [1, 8], "epoch": [1, 8], "epochsarrai": 1, "epsilon": 17, "equal": 17, "equalize_event_count": 8, "error": [1, 8, 17], "essenti": 17, "estim": [0, 1, 8, 15, 16, 18], "estimator_": [0, 16, 17], "estimators_": [0, 16, 17], "etc": 8, "euclidean": [0, 15, 16, 17], "event": [1, 8], "event_id": [1, 8], "everyth": 8, "exampl": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 17, 18], "examples_jupyt": 7, "examples_python": 7, "except": 17, "execut": [3, 6, 11, 12, 14], "exist": 17, "expand": 17, "expect": 17, "expos": 17, "f": [0, 1, 8, 16, 17], "f_": [0, 16, 17], "f_i": 1, "fabianschneid": 13, "face": [1, 8], "factor": 17, "fall": 17, "fals": 17, "far": 8, "featur": [1, 8, 17, 18], "fif": [1, 8], "fig": [1, 8], "figsiz": 8, "file": [3, 6, 8, 11, 12, 14], "filenam": [1, 8], "final": [1, 17, 18], "find": [8, 13], "find_ev": [1, 8], "first": [1, 4, 8, 9, 17], "firstli": 17, "fit": [0, 1, 8, 16, 17, 18], "fit_intercept": [0, 16, 17], "fit_transform": [0, 16, 17], "float": 17, "float32": [1, 8, 17], "float64": 18, "fname": [1, 8], "fnhum": 17, "fold": [1, 18], "follow": [0, 7, 8, 10, 17], "format": 1, "formula": 18, "found": [0, 1, 8], "fr": 8, "frac": [17, 18], "free": 1, "freedom": 17, "frequenc": 17, "from": [1, 3, 6, 8, 11, 12, 14, 17, 18], "from_numpi": [1, 8, 17], "frontier": 17, "full": [1, 4, 8, 9, 13, 17], "full_rdm": [0, 8, 16, 17], "func": 17, "function": [17, 18], "g": 17, "galleri": [1, 4, 7, 8, 9, 14], "gener": [1, 4, 7, 8, 9, 17], "get": [0, 8], "get_data": [1, 8], "getcwd": [4, 9], "git": 13, "github": 13, "given": [17, 20], "go": [1, 4, 8, 9], "goal": [1, 8], "gpu": [1, 8, 13], "grab": 1, "grad": [1, 8], "gradiomet": [1, 8], "gramfort": 17, "greatli": 17, "grisel": 17, "group": [0, 8, 16, 17], "guid": 17, "gz": 8, "g\u00f6rgen": 17, "h": [17, 18], "h_rsa": 8, "ha": 17, "half": 17, "hand": 8, "hat": [17, 18], "hauf": 17, "have": [0, 1, 8, 13, 17], "hayn": 17, "head": [1, 8], "help": 17, "here": [0, 1, 8, 13, 17, 18], "home": [4, 8, 9], "hot": 18, "how": [1, 17], "howev": 17, "hrdm": 8, "http": [8, 13], "human": [1, 8, 17], "hypothesi": 8, "i": [1, 4, 8, 9, 13, 17, 18], "id": [1, 8], "idea": 17, "ignor": [1, 8, 17], "imag": [1, 8], "implement": 17, "import": [1, 4, 8, 9, 17, 18], "impos": 17, "imshow": [8, 17], "inanim": 8, "indc": 8, "indic": [17, 18], "individu": 17, "indx_i": 8, "indx_j": 8, "influenc": 17, "info": [1, 8], "inform": [1, 8, 17, 18], "input": [17, 18], "insid": 17, "instal": [0, 13], "instead": 17, "instruct": 0, "int": 17, "intercept": 17, "intercept_": [0, 16, 17], "interpret": 17, "inv": [1, 18], "invers": [17, 18], "inverse_transform": [0, 1, 16, 17], "invert": 17, "io": [1, 8], "ipynb": [1, 4, 8, 9], "irrelev": 17, "is_avail": 8, "isn": 17, "item": [1, 8], "iter": 17, "its": 18, "j": [8, 17, 18], "job": 17, "joblib": 20, "join": [1, 8], "journal": 17, "json": 8, "jupyt": [1, 4, 7, 8, 9], "just": 17, "k": [1, 8, 17], "king": 17, "kingjr": 17, "kriegeskort": [17, 18], "kwarg": [0, 16, 17, 20], "l": 8, "label": [1, 8, 18], "lag": 17, "lalor": 17, "larg": 17, "last": 17, "learn": 17, "ledoit": 17, "ledoitwolf": [1, 17], "len": 8, "length": 17, "less": [1, 8], "let": [1, 8, 17], "level": [1, 8, 17], "liberto": 17, "librari": 13, "like": [1, 8, 17], "linalg": [1, 18], "linear": 17, "linear_model": 17, "list": [1, 8, 17], "load": [1, 8], "load_iri": 17, "locat": 8, "logspac": [1, 17], "look": [1, 8], "loop": 1, "lopez": 17, "m": 17, "machin": 17, "macro": 18, "mahalanobi": [0, 15, 16], "mai": [1, 8, 17], "make": [1, 13, 17], "make_pipelin": [1, 8], "manag": 20, "mann": 18, "manner": [17, 18], "map": [1, 8], "match": [1, 8], "math": [0, 8, 15, 16, 17], "mathbf": 18, "matlab": 17, "matplotlib": [1, 8, 17], "matric": [17, 18], "matrix": [1, 17, 18], "max_tp": 8, "max_trigg": [1, 8], "maximum": 17, "mb": [3, 6, 8, 11, 12, 14], "mean": [1, 8, 17], "mean_": [0, 16, 17], "meaningfulli": 17, "measur": [8, 18], "mechan": 17, "meg": [1, 8], "meineck": 17, "mem": [3, 6, 11, 12, 14], "meta": 17, "metadata": [1, 8, 17], "metadata_rout": 17, "method": [1, 13, 17], "metric": [17, 18], "michel": 17, "min_dur": [1, 8], "minimum": 17, "minut": [1, 4, 8, 9], "mne": [1, 8, 17], "mne_data": 8, "model": [1, 17], "model_select": 1, "modul": [0, 15], "more": [1, 8, 17, 18], "mostli": 17, "move": 8, "mp": 8, "mtrf": 17, "mu": 17, "multi": [17, 18], "multipl": 17, "multivari": [7, 13, 17], "mv": [4, 9, 17, 18], "mvpy": [0, 1, 4, 7, 8, 9, 10], "my": 13, "n": [8, 12, 17, 18], "n_channel": 17, "n_job": [0, 1, 8, 16, 17], "n_rsa": 8, "n_run": [1, 8], "n_split": 1, "n_trial": 17, "name": 17, "natur": [1, 8], "ncol": 8, "ndarrai": [17, 18], "neg": 18, "neural": [8, 17], "neuro": 17, "neuroimag": [7, 17, 18], "neurosci": 17, "new": 8, "next": [1, 17], "nice": [1, 18], "nili": 18, "nn": 17, "none": [1, 8, 17], "nonhuman": 8, "normal": [17, 18], "normalis": [0, 16, 17], "normalise_decod": [0, 16, 17], "note": [1, 8, 17, 18], "notebook": [1, 4, 7, 8, 9], "now": [1, 8], "np": [1, 8, 17, 18], "nrdm": 8, "nrow": 8, "number": [17, 18], "numpi": [1, 8, 17, 18], "o": [4, 9, 17], "object": [17, 20], "observ": 17, "obtain": [1, 8, 17], "offer": 17, "on_split_miss": [1, 8], "onc": [1, 13, 17], "one": [17, 18], "ones": [1, 17], "onli": [1, 8, 17], "oo": 1, "option": 17, "oquab": 17, "origin": [1, 8, 17], "osf": 8, "other": 17, "otherwis": [0, 17], "ouput": 17, "our": [1, 8, 17], "ourselv": 8, "out": [1, 8], "outcom": 17, "output": [1, 17], "over": [1, 17, 18], "overfit": 17, "ovo": 17, "ovr": 17, "ow": 17, "p": 18, "packag": [0, 15], "pad": 17, "panda": [1, 8], "paper": [1, 8], "parallel": 17, "paramet": [17, 18, 20], "parrai": 1, "part": 13, "part1": 8, "part2": 8, "particip": [1, 8], "particularli": 13, "pass": 17, "patch": 20, "path": [4, 9], "pattern": [0, 1, 13, 16, 17, 18], "pattern_": [0, 1, 16, 17], "paz": 17, "pd": 1, "pearson": [8, 18], "pearsonr": [0, 8, 15, 16, 17], "pearsonr_d": [0, 16, 17, 18], "pedregosa": 17, "penalti": 17, "per": 17, "perform": [1, 8, 17], "phd": 13, "pick": [1, 8], "pick_typ": [1, 8], "pip": 13, "pipelin": [1, 8, 17], "pleas": [0, 17], "plot": [1, 8, 17], "plot_topomap": 1, "plt": [1, 8, 17], "point": [1, 8, 17], "posit": [17, 18], "practic": 17, "pre": 17, "precis": [17, 18], "precision_": [0, 16, 17], "predict": [0, 1, 16, 17], "predict_proba": [0, 16, 17], "preload": [1, 8], "preprocess": 17, "princip": [17, 18], "print": [1, 4, 8, 9, 17], "probabl": 17, "proceed": 0, "produc": 1, "progress": [17, 20], "progressbar": [0, 15, 16], "project": [1, 8], "provid": 17, "provost": 18, "py": [1, 3, 4, 6, 8, 9, 11, 14], "pyplot": [1, 8, 17], "python": [1, 4, 7, 8, 9, 13, 17], "quick": 8, "quickli": 1, "r": [1, 8, 17, 18], "r_": 18, "rais": 17, "randint": 17, "randn": 18, "rang": [1, 8, 17], "rank": [0, 15, 16], "raw": [1, 8], "rdbu_r": [8, 17], "rdm": [7, 10, 11, 14, 17], "rdm_": [0, 8, 16, 17], "read": 0, "read_csv": [1, 8], "read_raw_fif": [1, 8], "readabl": 17, "realli": 17, "recommend": 17, "reconstruct": 17, "record": 17, "red": [1, 8], "refer": [17, 18], "regress": 17, "regularis": 17, "rel": [1, 17], "relat": 17, "relev": 17, "reliabl": 18, "report": 20, "represent": [0, 13, 17], "request": 17, "requir": [4, 7, 9, 10, 17], "research": 17, "respect": 18, "respons": 17, "rest": 17, "result": [8, 17], "retain": 17, "return": [17, 18], "return_count": 8, "return_x_i": 17, "rho": 8, "rho_pr": 8, "ridg": 17, "ridgecv": [0, 15, 16], "roc": 18, "roc_auc": [0, 15, 16], "rocauc": 18, "roughli": [1, 8], "round": 8, "rout": 17, "row": [1, 8], "rsa": [0, 7, 8, 10, 11, 14, 15, 16], "rsm": 8, "run": [1, 4, 8, 9, 17], "runner": [4, 8, 9], "s0047": 17, "sai": 17, "same": [1, 8, 17], "sampl": [1, 8, 17, 18], "sample_subject_": [1, 8], "sample_weight": 17, "saw": [1, 8], "scale": [1, 8, 17], "scale_": [0, 16, 17], "scaler": [0, 1, 8, 15, 16], "scaler_": [0, 16, 17], "scheme": 1, "scikit": 17, "score": [1, 18], "script": [1, 4, 8, 9], "searchlight": 17, "second": [1, 4, 8, 9, 17], "secondli": 17, "section": [0, 7, 10], "see": [8, 17, 18], "select": 17, "selet": 17, "self": 17, "sens": 17, "separ": 17, "set": [1, 8, 17], "set_config": 17, "set_fit_request": [0, 16, 17], "set_titl": 8, "set_xlabel": [1, 8], "set_ylabel": [1, 8], "setup": [1, 4, 8, 9], "shape": [1, 8, 17, 18], "shape_": [0, 16, 17], "should": 17, "shrinkag": 17, "shrinkage_": [0, 16, 17], "sigma": 17, "signal": [0, 15, 16, 17], "similar": [0, 8, 13, 17, 18], "similartii": 17, "simpl": [17, 20], "simpli": [13, 17], "size": [17, 18], "skf": 1, "sklearn": [1, 8, 17], "slide": [0, 1, 15, 16], "so": [0, 1, 8], "some": [4, 8, 9, 13, 17], "sometim": 18, "sourc": [0, 1, 4, 7, 8, 9], "spearman": [8, 18], "spearmanr": [0, 8, 15, 16, 17], "spearmanr_d": [0, 16, 17, 18], "specif": 8, "specifi": 1, "speed": [1, 8], "sphinx": [1, 4, 7, 8, 9], "split": [1, 8, 17], "sqrt": 18, "squar": 18, "squeez": 1, "sr": 17, "stack": 17, "standard": [1, 17], "standardscal": 17, "start": 0, "std": 17, "step": [7, 10, 17], "sti101": [1, 8], "stim": [1, 8], "stimuli": 17, "stimulu": [1, 8, 17], "str": [1, 8, 17], "strategi": 17, "stratifiedkfold": 1, "structur": 1, "sub": 17, "submodul": [0, 15, 16], "subpackag": [0, 15], "subplot": [1, 8], "succesfulli": 1, "sum": [8, 18], "sum_": [17, 18], "sum_i": 18, "sum_n": 17, "suppli": 17, "support": [13, 17], "sure": 17, "swapax": [17, 18], "sy": [4, 9], "system": [4, 9, 17], "t": [1, 4, 8, 9, 17, 18], "t4yjp": 8, "t_max": [0, 16, 17], "t_min": [0, 16, 17], "take": [1, 8, 18], "tar": 8, "target": [1, 17], "task": [1, 8], "tau": 17, "technic": [17, 18], "tempor": 17, "tensor": [1, 17, 18], "tesor": 18, "test": 1, "text": 18, "th": 18, "than": 1, "them": 17, "therefor": 18, "thi": [1, 4, 8, 9, 17, 18], "thirion": 17, "though": 1, "through": [7, 10], "ti": 18, "tight_layout": 8, "time": [1, 4, 8, 9, 17], "timedelai": [0, 15, 16], "timepoint": 17, "tmax": [1, 8], "tmin": [1, 8], "to_numpi": [0, 16, 17], "to_torch": [0, 1, 8, 16, 17], "too": 18, "toolbox": 17, "top": [0, 16, 17], "torch": [1, 8, 17, 18], "torch_ridg": 17, "total": [1, 3, 4, 6, 8, 9, 11, 12, 14], "tqdm": 20, "tqdm_joblib": [0, 16, 20], "tqdm_object": 20, "train": [1, 17], "transform": [0, 1, 8, 16, 17], "trf": 17, "trial": [1, 8, 17, 18], "triangular": 17, "trigger": [1, 8], "true": [1, 8, 17, 20], "try": 8, "tupl": 17, "two": [8, 17], "type": [17, 18], "u": [1, 17, 18], "unchang": 17, "union": [17, 18], "uniqu": [8, 18], "unit": [8, 17], "unless": 17, "unlik": 17, "unq": 8, "unq_i": 8, "unrank": 18, "unsqueez": 17, "untar": 8, "up": [1, 8], "updat": 17, "upper": 17, "us": [1, 7, 8, 10, 13, 17, 18], "user": 17, "util": [0, 1, 15, 16, 17], "v": 17, "valid": [1, 17, 18], "valu": [1, 8, 17], "vanderpla": 17, "var_": [0, 16, 17], "varianc": [8, 17], "varoquaux": 17, "vector": [1, 8, 17, 18], "vectoris": 18, "verbos": [0, 1, 8, 16, 17], "veri": 17, "version": [8, 17], "visual": [1, 8], "visual_92_categori": [1, 8], "visual_stimuli": [1, 8], "visualis": 1, "vmax": 8, "vmin": 8, "voxel": 18, "w": 17, "w_": [0, 16, 17], "wai": 8, "walk": [7, 10], "walther": 18, "want": [1, 8, 17], "warn": [1, 8], "we": [1, 4, 7, 8, 9, 10, 17, 18], "weight": 17, "well": [1, 17], "were": 17, "when": 17, "where": [8, 17, 18], "wherea": 17, "wherein": 17, "whether": [17, 20], "which": [1, 8, 17], "while": [1, 8, 17], "whiten": [1, 17], "whitener_": [0, 1, 16, 17], "whitnei": 18, "window": [0, 16, 17], "wise": 17, "wish": [1, 17], "with_mean": 17, "with_std": 17, "without": 17, "wolf": 17, "won": [4, 9], "work": [1, 4, 9, 17], "would": [1, 8, 17], "wrap": 17, "wrapper": [17, 18], "write": 13, "x": [1, 8, 17, 18], "x_": [17, 18], "x_g": 8, "x_i": [17, 18], "x_if": 1, "x_j": 18, "x_nf": 1, "x_tr": 1, "y": [1, 8, 17, 18], "y_": 18, "y_1": 17, "y_g": 8, "y_h": 1, "y_i": [17, 18], "y_j": 18, "y_score": 18, "y_tr": 1, "y_true": 18, "yet": 0, "you": [0, 1, 13, 17], "your": [1, 4, 9, 17, 18], "z": 17, "zareamoghaddam": 18, "zero": [1, 8, 17], "zip": [1, 4, 7, 8, 9], "\u00df": 17, "\u03c3": 18}, "titles": ["Documentation", "1. Classification", "Decoders", "Computation times", "Encoders", "Encoders", "Computation times", "Examples", "1. Computing RDMs", "2. RSA encoders", "Representational similarity analysis", "Computation times", "Computation times", "\ud83d\ude80 Getting started with MVPy", "Computation times", "mvpy", "mvpy package", "mvpy.estimators package", "mvpy.math package", "mvpy.signal package", "mvpy.utilities package"], "titleterms": {"1": [1, 8], "2": 9, "accuraci": 18, "analysi": [7, 10], "b2b": 17, "can": 13, "classif": 1, "classifi": 17, "comput": [3, 6, 8, 11, 12, 14], "content": [16, 17, 18, 19, 20], "cosin": 18, "covari": 17, "crossvalid": 18, "decod": [2, 7, 17], "do": 13, "document": [0, 13], "encod": [4, 5, 7, 9, 17], "estim": 17, "euclidean": 18, "exampl": 7, "get": 13, "mahalanobi": 18, "math": 18, "modul": [16, 17, 18, 19, 20], "mvpy": [13, 15, 16, 17, 18, 19, 20], "packag": [16, 17, 18, 19, 20], "pearsonr": 18, "progressbar": 20, "rank": 18, "rdm": 8, "represent": [7, 10], "ridgecv": 17, "roc_auc": 18, "rsa": [9, 17], "scaler": 17, "signal": 19, "similar": [7, 10], "slide": 17, "so": 13, "spearmanr": 18, "start": 13, "submodul": [17, 18, 20], "subpackag": 16, "time": [3, 6, 11, 12, 14], "timedelai": 17, "util": 20, "what": 13}})