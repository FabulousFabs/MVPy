Search.setIndex({"alltitles": {"1. Classification": [[1, null]], "1. Computing RDMs": [[8, null]], "2. RSA encoders": [[9, null]], "Computation times": [[3, null], [6, null], [11, null], [12, null], [14, null]], "Decoders": [[2, null], [7, "decoders"]], "Documentation": [[0, null]], "Encoders": [[4, null], [5, null], [7, "encoders"]], "Examples": [[7, null]], "Module contents": [[16, "module-mvpy"], [17, "module-mvpy.estimators"], [18, "module-mvpy.math"], [19, "module-mvpy.signal"], [20, "module-mvpy.utilities"]], "Representational similarity analysis": [[7, "representational-similarity-analysis"], [10, null]], "Submodules": [[17, "submodules"], [18, "submodules"], [20, "submodules"]], "Subpackages": [[16, "subpackages"]], "mvpy": [[15, null]], "mvpy package": [[16, null]], "mvpy.estimators package": [[17, null]], "mvpy.estimators.classifier module": [[17, "module-mvpy.estimators.classifier"]], "mvpy.estimators.covariance module": [[17, "module-mvpy.estimators.covariance"]], "mvpy.estimators.decoder module": [[17, "module-mvpy.estimators.decoder"]], "mvpy.estimators.ridgecv module": [[17, "module-mvpy.estimators.ridgecv"]], "mvpy.estimators.rsa module": [[17, "module-mvpy.estimators.rsa"]], "mvpy.estimators.scaler module": [[17, "module-mvpy.estimators.scaler"]], "mvpy.estimators.sliding module": [[17, "module-mvpy.estimators.sliding"]], "mvpy.math package": [[18, null]], "mvpy.math.cosine module": [[18, "module-mvpy.math.cosine"]], "mvpy.math.crossvalidated module": [[18, "module-mvpy.math.crossvalidated"]], "mvpy.math.euclidean module": [[18, "module-mvpy.math.euclidean"]], "mvpy.math.mahalanobis module": [[18, "module-mvpy.math.mahalanobis"]], "mvpy.math.pearsonr module": [[18, "module-mvpy.math.pearsonr"]], "mvpy.math.rank module": [[18, "module-mvpy.math.rank"]], "mvpy.math.spearmanr module": [[18, "module-mvpy.math.spearmanr"]], "mvpy.signal package": [[19, null]], "mvpy.utilities package": [[20, null]], "mvpy.utilities.progressbar module": [[20, "module-mvpy.utilities.progressbar"]], "\ud83d\udc23 So what can MVPy do?": [[13, "so-what-can-mvpy-do"]], "\ud83d\udd0e Documentation": [[13, "documentation"]], "\ud83d\ude80 Getting started with MVPy": [[13, null]]}, "docnames": ["documentation/index", "examples/decoders/1_decoders_intro", "examples/decoders/index", "examples/decoders/sg_execution_times", "examples/encoders/encoders_intro", "examples/encoders/index", "examples/encoders/sg_execution_times", "examples/index", "examples/rsa/1_rsa_intro", "examples/rsa/2_rsa_encoder", "examples/rsa/index", "examples/rsa/sg_execution_times", "examples/sg_execution_times", "index", "sg_execution_times", "source/modules", "source/mvpy", "source/mvpy.estimators", "source/mvpy.math", "source/mvpy.signal", "source/mvpy.utilities"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["documentation/index.rst", "examples/decoders/1_decoders_intro.rst", "examples/decoders/index.rst", "examples/decoders/sg_execution_times.rst", "examples/encoders/encoders_intro.rst", "examples/encoders/index.rst", "examples/encoders/sg_execution_times.rst", "examples/index.rst", "examples/rsa/1_rsa_intro.rst", "examples/rsa/2_rsa_encoder.rst", "examples/rsa/index.rst", "examples/rsa/sg_execution_times.rst", "examples/sg_execution_times.rst", "index.rst", "sg_execution_times.rst", "source/modules.rst", "source/mvpy.rst", "source/mvpy.estimators.rst", "source/mvpy.math.rst", "source/mvpy.signal.rst", "source/mvpy.utilities.rst"], "indexentries": {"alpha_ (mvpy.estimators.decoder.decoder attribute)": [[17, "mvpy.estimators.decoder.Decoder.alpha_", false]], "alpha_ (mvpy.estimators.ridgecv.ridgecv attribute)": [[17, "mvpy.estimators.ridgecv.RidgeCV.alpha_", false]], "classes_ (mvpy.estimators.classifier.classifier attribute)": [[17, "mvpy.estimators.classifier.Classifier.classes_", false]], "classifier (class in mvpy.estimators.classifier)": [[17, "mvpy.estimators.classifier.Classifier", false]], "clone() (mvpy.estimators.classifier.classifier method)": [[17, "mvpy.estimators.classifier.Classifier.clone", false]], "clone() (mvpy.estimators.covariance.covariance method)": [[17, "mvpy.estimators.covariance.Covariance.clone", false]], "clone() (mvpy.estimators.decoder.decoder method)": [[17, "mvpy.estimators.decoder.Decoder.clone", false]], "clone() (mvpy.estimators.ridgecv.ridgecv method)": [[17, "mvpy.estimators.ridgecv.RidgeCV.clone", false]], "clone() (mvpy.estimators.rsa.rsa method)": [[17, "mvpy.estimators.rsa.RSA.clone", false]], "clone() (mvpy.estimators.scaler.scaler method)": [[17, "mvpy.estimators.scaler.Scaler.clone", false]], "clone() (mvpy.estimators.sliding.sliding method)": [[17, "mvpy.estimators.sliding.Sliding.clone", false]], "coef_ (mvpy.estimators.classifier.classifier attribute)": [[17, "mvpy.estimators.classifier.Classifier.coef_", false]], "coef_ (mvpy.estimators.decoder.decoder attribute)": [[17, "mvpy.estimators.decoder.Decoder.coef_", false]], "coef_ (mvpy.estimators.ridgecv.ridgecv attribute)": [[17, "mvpy.estimators.ridgecv.RidgeCV.coef_", false]], "collect() (mvpy.estimators.sliding.sliding method)": [[17, "mvpy.estimators.sliding.Sliding.collect", false]], "copy() (mvpy.estimators.scaler.scaler method)": [[17, "mvpy.estimators.scaler.Scaler.copy", false]], "cosine() (in module mvpy.math.cosine)": [[18, "mvpy.math.cosine.cosine", false]], "cosine_d() (in module mvpy.math.cosine)": [[18, "mvpy.math.cosine.cosine_d", false]], "covariance (class in mvpy.estimators.covariance)": [[17, "mvpy.estimators.covariance.Covariance", false]], "covariance_ (mvpy.estimators.covariance.covariance attribute)": [[17, "mvpy.estimators.covariance.Covariance.covariance_", false]], "cv_euclidean() (in module mvpy.math.crossvalidated)": [[18, "mvpy.math.crossvalidated.cv_euclidean", false]], "cv_mahalanobis() (in module mvpy.math.crossvalidated)": [[18, "mvpy.math.crossvalidated.cv_mahalanobis", false]], "cx_ (mvpy.estimators.rsa.rsa attribute)": [[17, "mvpy.estimators.rsa.RSA.cx_", false]], "cy_ (mvpy.estimators.rsa.rsa attribute)": [[17, "mvpy.estimators.rsa.RSA.cy_", false]], "decoder (class in mvpy.estimators.decoder)": [[17, "mvpy.estimators.decoder.Decoder", false]], "dims (mvpy.estimators.sliding.sliding attribute)": [[17, "mvpy.estimators.sliding.Sliding.dims", false]], "estimator (mvpy.estimators.rsa.rsa attribute)": [[17, "mvpy.estimators.rsa.RSA.estimator", false]], "estimator (mvpy.estimators.sliding.sliding attribute)": [[17, "mvpy.estimators.sliding.Sliding.estimator", false]], "estimator_ (mvpy.estimators.classifier.classifier attribute)": [[17, "mvpy.estimators.classifier.Classifier.estimator_", false]], "estimator_ (mvpy.estimators.decoder.decoder attribute)": [[17, "mvpy.estimators.decoder.Decoder.estimator_", false]], "estimators_ (mvpy.estimators.classifier.classifier attribute)": [[17, "mvpy.estimators.classifier.Classifier.estimators_", false]], "estimators_ (mvpy.estimators.sliding.sliding attribute)": [[17, "mvpy.estimators.sliding.Sliding.estimators_", false]], "euclidean() (in module mvpy.math.euclidean)": [[18, "mvpy.math.euclidean.euclidean", false]], "fit() (mvpy.estimators.classifier.classifier method)": [[17, "mvpy.estimators.classifier.Classifier.fit", false]], "fit() (mvpy.estimators.covariance.covariance method)": [[17, "mvpy.estimators.covariance.Covariance.fit", false]], "fit() (mvpy.estimators.decoder.decoder method)": [[17, "mvpy.estimators.decoder.Decoder.fit", false]], "fit() (mvpy.estimators.ridgecv.ridgecv method)": [[17, "mvpy.estimators.ridgecv.RidgeCV.fit", false]], "fit() (mvpy.estimators.rsa.rsa method)": [[17, "mvpy.estimators.rsa.RSA.fit", false]], "fit() (mvpy.estimators.scaler.scaler method)": [[17, "mvpy.estimators.scaler.Scaler.fit", false]], "fit() (mvpy.estimators.sliding.sliding method)": [[17, "mvpy.estimators.sliding.Sliding.fit", false]], "fit_transform() (mvpy.estimators.covariance.covariance method)": [[17, "mvpy.estimators.covariance.Covariance.fit_transform", false]], "fit_transform() (mvpy.estimators.rsa.rsa method)": [[17, "mvpy.estimators.rsa.RSA.fit_transform", false]], "fit_transform() (mvpy.estimators.scaler.scaler method)": [[17, "mvpy.estimators.scaler.Scaler.fit_transform", false]], "fit_transform() (mvpy.estimators.sliding.sliding method)": [[17, "mvpy.estimators.sliding.Sliding.fit_transform", false]], "full_rdm() (mvpy.estimators.rsa.rsa method)": [[17, "mvpy.estimators.rsa.RSA.full_rdm", false]], "grouped (mvpy.estimators.rsa.rsa attribute)": [[17, "mvpy.estimators.rsa.RSA.grouped", false]], "intercept_ (mvpy.estimators.classifier.classifier attribute)": [[17, "mvpy.estimators.classifier.Classifier.intercept_", false]], "intercept_ (mvpy.estimators.decoder.decoder attribute)": [[17, "mvpy.estimators.decoder.Decoder.intercept_", false]], "intercept_ (mvpy.estimators.ridgecv.ridgecv attribute)": [[17, "mvpy.estimators.ridgecv.RidgeCV.intercept_", false]], "inverse_transform() (mvpy.estimators.scaler.scaler method)": [[17, "mvpy.estimators.scaler.Scaler.inverse_transform", false]], "mahalanobis() (in module mvpy.math.mahalanobis)": [[18, "mvpy.math.mahalanobis.mahalanobis", false]], "mean_ (mvpy.estimators.scaler.scaler attribute)": [[17, "mvpy.estimators.scaler.Scaler.mean_", false]], "module": [[16, "module-mvpy", false], [17, "module-mvpy.estimators", false], [17, "module-mvpy.estimators.classifier", false], [17, "module-mvpy.estimators.covariance", false], [17, "module-mvpy.estimators.decoder", false], [17, "module-mvpy.estimators.ridgecv", false], [17, "module-mvpy.estimators.rsa", false], [17, "module-mvpy.estimators.scaler", false], [17, "module-mvpy.estimators.sliding", false], [18, "module-mvpy.math", false], [18, "module-mvpy.math.cosine", false], [18, "module-mvpy.math.crossvalidated", false], [18, "module-mvpy.math.euclidean", false], [18, "module-mvpy.math.mahalanobis", false], [18, "module-mvpy.math.pearsonr", false], [18, "module-mvpy.math.rank", false], [18, "module-mvpy.math.spearmanr", false], [19, "module-mvpy.signal", false], [20, "module-mvpy.utilities", false], [20, "module-mvpy.utilities.progressbar", false]], "mvpy": [[16, "module-mvpy", false]], "mvpy.estimators": [[17, "module-mvpy.estimators", false]], "mvpy.estimators.classifier": [[17, "module-mvpy.estimators.classifier", false]], "mvpy.estimators.covariance": [[17, "module-mvpy.estimators.covariance", false]], "mvpy.estimators.decoder": [[17, "module-mvpy.estimators.decoder", false]], "mvpy.estimators.ridgecv": [[17, "module-mvpy.estimators.ridgecv", false]], "mvpy.estimators.rsa": [[17, "module-mvpy.estimators.rsa", false]], "mvpy.estimators.scaler": [[17, "module-mvpy.estimators.scaler", false]], "mvpy.estimators.sliding": [[17, "module-mvpy.estimators.sliding", false]], "mvpy.math": [[18, "module-mvpy.math", false]], "mvpy.math.cosine": [[18, "module-mvpy.math.cosine", false]], "mvpy.math.crossvalidated": [[18, "module-mvpy.math.crossvalidated", false]], "mvpy.math.euclidean": [[18, "module-mvpy.math.euclidean", false]], "mvpy.math.mahalanobis": [[18, "module-mvpy.math.mahalanobis", false]], "mvpy.math.pearsonr": [[18, "module-mvpy.math.pearsonr", false]], "mvpy.math.rank": [[18, "module-mvpy.math.rank", false]], "mvpy.math.spearmanr": [[18, "module-mvpy.math.spearmanr", false]], "mvpy.signal": [[19, "module-mvpy.signal", false]], "mvpy.utilities": [[20, "module-mvpy.utilities", false]], "mvpy.utilities.progressbar": [[20, "module-mvpy.utilities.progressbar", false]], "n_jobs (mvpy.estimators.rsa.rsa attribute)": [[17, "mvpy.estimators.rsa.RSA.n_jobs", false]], "pattern_ (mvpy.estimators.classifier.classifier attribute)": [[17, "mvpy.estimators.classifier.Classifier.pattern_", false]], "pattern_ (mvpy.estimators.decoder.decoder attribute)": [[17, "mvpy.estimators.decoder.Decoder.pattern_", false]], "pearsonr() (in module mvpy.math.pearsonr)": [[18, "mvpy.math.pearsonr.pearsonr", false]], "pearsonr_d() (in module mvpy.math.pearsonr)": [[18, "mvpy.math.pearsonr.pearsonr_d", false]], "precision_ (mvpy.estimators.covariance.covariance attribute)": [[17, "mvpy.estimators.covariance.Covariance.precision_", false]], "predict() (mvpy.estimators.classifier.classifier method)": [[17, "mvpy.estimators.classifier.Classifier.predict", false]], "predict() (mvpy.estimators.decoder.decoder method)": [[17, "mvpy.estimators.decoder.Decoder.predict", false]], "predict() (mvpy.estimators.ridgecv.ridgecv method)": [[17, "mvpy.estimators.ridgecv.RidgeCV.predict", false]], "predict() (mvpy.estimators.sliding.sliding method)": [[17, "mvpy.estimators.sliding.Sliding.predict", false]], "predict_proba() (mvpy.estimators.classifier.classifier method)": [[17, "mvpy.estimators.classifier.Classifier.predict_proba", false]], "predict_proba() (mvpy.estimators.sliding.sliding method)": [[17, "mvpy.estimators.sliding.Sliding.predict_proba", false]], "progressbar (class in mvpy.utilities.progressbar)": [[20, "mvpy.utilities.progressbar.Progressbar", false]], "rank() (in module mvpy.math.rank)": [[18, "mvpy.math.rank.rank", false]], "rdm_ (mvpy.estimators.rsa.rsa attribute)": [[17, "mvpy.estimators.rsa.RSA.rdm_", false]], "ridgecv (class in mvpy.estimators.ridgecv)": [[17, "mvpy.estimators.ridgecv.RidgeCV", false]], "rsa (class in mvpy.estimators.rsa)": [[17, "mvpy.estimators.rsa.RSA", false]], "scale_ (mvpy.estimators.scaler.scaler attribute)": [[17, "mvpy.estimators.scaler.Scaler.scale_", false]], "scaler (class in mvpy.estimators.scaler)": [[17, "mvpy.estimators.scaler.Scaler", false]], "set_fit_request() (mvpy.estimators.scaler.scaler method)": [[17, "mvpy.estimators.scaler.Scaler.set_fit_request", false]], "shape_ (mvpy.estimators.scaler.scaler attribute)": [[17, "mvpy.estimators.scaler.Scaler.shape_", false]], "shrinkage_ (mvpy.estimators.covariance.covariance attribute)": [[17, "mvpy.estimators.covariance.Covariance.shrinkage_", false]], "sliding (class in mvpy.estimators.sliding)": [[17, "mvpy.estimators.sliding.Sliding", false]], "spearmanr() (in module mvpy.math.spearmanr)": [[18, "mvpy.math.spearmanr.spearmanr", false]], "spearmanr_d() (in module mvpy.math.spearmanr)": [[18, "mvpy.math.spearmanr.spearmanr_d", false]], "to_numpy() (mvpy.estimators.covariance.covariance method)": [[17, "mvpy.estimators.covariance.Covariance.to_numpy", false]], "to_numpy() (mvpy.estimators.rsa.rsa method)": [[17, "mvpy.estimators.rsa.RSA.to_numpy", false]], "to_numpy() (mvpy.estimators.scaler.scaler method)": [[17, "mvpy.estimators.scaler.Scaler.to_numpy", false]], "to_torch() (mvpy.estimators.covariance.covariance method)": [[17, "mvpy.estimators.covariance.Covariance.to_torch", false]], "to_torch() (mvpy.estimators.rsa.rsa method)": [[17, "mvpy.estimators.rsa.RSA.to_torch", false]], "to_torch() (mvpy.estimators.scaler.scaler method)": [[17, "mvpy.estimators.scaler.Scaler.to_torch", false]], "top (mvpy.estimators.sliding.sliding attribute)": [[17, "mvpy.estimators.sliding.Sliding.top", false]], "tqdm_joblib() (in module mvpy.utilities.progressbar)": [[20, "mvpy.utilities.progressbar.tqdm_joblib", false]], "transform() (mvpy.estimators.covariance.covariance method)": [[17, "mvpy.estimators.covariance.Covariance.transform", false]], "transform() (mvpy.estimators.rsa.rsa method)": [[17, "mvpy.estimators.rsa.RSA.transform", false]], "transform() (mvpy.estimators.scaler.scaler method)": [[17, "mvpy.estimators.scaler.Scaler.transform", false]], "transform() (mvpy.estimators.sliding.sliding method)": [[17, "mvpy.estimators.sliding.Sliding.transform", false]], "var_ (mvpy.estimators.scaler.scaler attribute)": [[17, "mvpy.estimators.scaler.Scaler.var_", false]], "verbose (mvpy.estimators.rsa.rsa attribute)": [[17, "mvpy.estimators.rsa.RSA.verbose", false]], "verbose (mvpy.estimators.sliding.sliding attribute)": [[17, "mvpy.estimators.sliding.Sliding.verbose", false]], "whitener_ (mvpy.estimators.covariance.covariance attribute)": [[17, "mvpy.estimators.covariance.Covariance.whitener_", false]]}, "objects": {"": [[16, 0, 0, "-", "mvpy"]], "mvpy": [[17, 0, 0, "-", "estimators"], [18, 0, 0, "-", "math"], [19, 0, 0, "-", "signal"], [20, 0, 0, "-", "utilities"]], "mvpy.estimators": [[17, 0, 0, "-", "classifier"], [17, 0, 0, "-", "covariance"], [17, 0, 0, "-", "decoder"], [17, 0, 0, "-", "ridgecv"], [17, 0, 0, "-", "rsa"], [17, 0, 0, "-", "scaler"], [17, 0, 0, "-", "sliding"]], "mvpy.estimators.classifier": [[17, 1, 1, "", "Classifier"]], "mvpy.estimators.classifier.Classifier": [[17, 2, 1, "", "classes_"], [17, 3, 1, "", "clone"], [17, 2, 1, "", "coef_"], [17, 2, 1, "", "estimator_"], [17, 2, 1, "", "estimators_"], [17, 3, 1, "", "fit"], [17, 2, 1, "", "intercept_"], [17, 2, 1, "", "pattern_"], [17, 3, 1, "", "predict"], [17, 3, 1, "", "predict_proba"]], "mvpy.estimators.covariance": [[17, 1, 1, "", "Covariance"]], "mvpy.estimators.covariance.Covariance": [[17, 3, 1, "", "clone"], [17, 2, 1, "", "covariance_"], [17, 3, 1, "", "fit"], [17, 3, 1, "", "fit_transform"], [17, 2, 1, "", "precision_"], [17, 2, 1, "", "shrinkage_"], [17, 3, 1, "", "to_numpy"], [17, 3, 1, "", "to_torch"], [17, 3, 1, "", "transform"], [17, 2, 1, "", "whitener_"]], "mvpy.estimators.decoder": [[17, 1, 1, "", "Decoder"]], "mvpy.estimators.decoder.Decoder": [[17, 2, 1, "", "alpha_"], [17, 3, 1, "", "clone"], [17, 2, 1, "", "coef_"], [17, 2, 1, "", "estimator_"], [17, 3, 1, "", "fit"], [17, 2, 1, "", "intercept_"], [17, 2, 1, "", "pattern_"], [17, 3, 1, "", "predict"]], "mvpy.estimators.ridgecv": [[17, 1, 1, "", "RidgeCV"]], "mvpy.estimators.ridgecv.RidgeCV": [[17, 2, 1, "", "alpha_"], [17, 3, 1, "", "clone"], [17, 2, 1, "", "coef_"], [17, 3, 1, "", "fit"], [17, 2, 1, "", "intercept_"], [17, 3, 1, "", "predict"]], "mvpy.estimators.rsa": [[17, 1, 1, "", "RSA"]], "mvpy.estimators.rsa.RSA": [[17, 3, 1, "", "clone"], [17, 2, 1, "", "cx_"], [17, 2, 1, "", "cy_"], [17, 2, 1, "", "estimator"], [17, 3, 1, "", "fit"], [17, 3, 1, "", "fit_transform"], [17, 3, 1, "", "full_rdm"], [17, 2, 1, "", "grouped"], [17, 2, 1, "", "n_jobs"], [17, 2, 1, "", "rdm_"], [17, 3, 1, "", "to_numpy"], [17, 3, 1, "", "to_torch"], [17, 3, 1, "", "transform"], [17, 2, 1, "", "verbose"]], "mvpy.estimators.scaler": [[17, 1, 1, "", "Scaler"]], "mvpy.estimators.scaler.Scaler": [[17, 3, 1, "", "clone"], [17, 3, 1, "", "copy"], [17, 3, 1, "", "fit"], [17, 3, 1, "", "fit_transform"], [17, 3, 1, "", "inverse_transform"], [17, 2, 1, "", "mean_"], [17, 2, 1, "", "scale_"], [17, 3, 1, "", "set_fit_request"], [17, 2, 1, "", "shape_"], [17, 3, 1, "", "to_numpy"], [17, 3, 1, "", "to_torch"], [17, 3, 1, "", "transform"], [17, 2, 1, "", "var_"]], "mvpy.estimators.sliding": [[17, 1, 1, "", "Sliding"]], "mvpy.estimators.sliding.Sliding": [[17, 3, 1, "", "clone"], [17, 3, 1, "", "collect"], [17, 2, 1, "", "dims"], [17, 2, 1, "", "estimator"], [17, 2, 1, "", "estimators_"], [17, 3, 1, "", "fit"], [17, 3, 1, "", "fit_transform"], [17, 3, 1, "", "predict"], [17, 3, 1, "", "predict_proba"], [17, 2, 1, "", "top"], [17, 3, 1, "", "transform"], [17, 2, 1, "", "verbose"]], "mvpy.math": [[18, 0, 0, "-", "cosine"], [18, 0, 0, "-", "crossvalidated"], [18, 0, 0, "-", "euclidean"], [18, 0, 0, "-", "mahalanobis"], [18, 0, 0, "-", "pearsonr"], [18, 0, 0, "-", "rank"], [18, 0, 0, "-", "spearmanr"]], "mvpy.math.cosine": [[18, 4, 1, "", "cosine"], [18, 4, 1, "", "cosine_d"]], "mvpy.math.crossvalidated": [[18, 4, 1, "", "cv_euclidean"], [18, 4, 1, "", "cv_mahalanobis"]], "mvpy.math.euclidean": [[18, 4, 1, "", "euclidean"]], "mvpy.math.mahalanobis": [[18, 4, 1, "", "mahalanobis"]], "mvpy.math.pearsonr": [[18, 4, 1, "", "pearsonr"], [18, 4, 1, "", "pearsonr_d"]], "mvpy.math.rank": [[18, 4, 1, "", "rank"]], "mvpy.math.spearmanr": [[18, 4, 1, "", "spearmanr"], [18, 4, 1, "", "spearmanr_d"]], "mvpy.utilities": [[20, 0, 0, "-", "progressbar"]], "mvpy.utilities.progressbar": [[20, 1, 1, "", "Progressbar"], [20, 4, 1, "", "tqdm_joblib"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function"}, "terms": {"": [1, 8, 17, 18], "0": [1, 3, 4, 6, 8, 9, 11, 12, 14, 17, 18], "00": [1, 6, 11, 12, 14, 17], "000": 12, "0000": [17, 18], "0000e": 17, "00096": 17, "001": [4, 6, 9, 11, 14], "002": 1, "004": 17, "00g": 1, "01": [1, 17], "012": 18, "01371": 18, "01g": 1, "02": [1, 17], "02g": 1, "03": [1, 17], "03g": 1, "03m42": 1, "04": [1, 3, 14, 17], "04g": 1, "05": [1, 17], "05g": 1, "06": [1, 17], "067": 17, "0691e": 17, "06g": 1, "07": [1, 17], "07g": 1, "08": [1, 17], "08g": 1, "09": [1, 17], "09g": 1, "0m": 1, "0mb": 1, "1": [2, 3, 6, 7, 10, 11, 14, 17, 18], "10": [1, 17, 18], "100": [1, 8, 17, 18], "1000": 17, "100m": 1, "1016": [17, 18], "102m": 1, "105m": 1, "10g": 1, "11": 1, "110": 17, "110m": 1, "114m": 1, "117m": 1, "11g": 1, "12": [1, 17, 18], "122m": 1, "125m": 1, "1274": 17, "1288e": 17, "12g": 1, "13": 1, "131m": 1, "132m": 1, "137": 18, "139m": 1, "13g": 1, "14": 1, "140m": 1, "147m": 1, "14g": 1, "15": 1, "150": 17, "154m": 1, "156m": 1, "1585e": 17, "15g": 1, "16": 1, "1607": 18, "162m": 1, "164m": 1, "16g": 1, "17": 1, "170m": 1, "172": [1, 3, 14], "173m": 1, "178m": 1, "17g": 1, "18": 1, "181m": 1, "185m": 1, "188": 18, "18g": 1, "19": 1, "190m": 1, "193m": 1, "198m": 1, "19g": 1, "1_decoders_intro": [1, 3, 14], "1_rsa_intro": [8, 11, 14], "1e": 1, "1m": 1, "1mb": 1, "2": [1, 7, 8, 10, 11, 14, 17, 18], "20": [1, 17], "200": [1, 18], "2004": 17, "2008": 17, "200m": 1, "2011": 17, "2013": 17, "2014": 17, "2015": 18, "2016": 18, "2020": 17, "204": 1, "206m": 1, "208m": 1, "20g": 1, "20m": 1, "21": 1, "215m": 1, "21g": 1, "22": 1, "222": 1, "223m": 1, "22g": 1, "23": 1, "230m": 1, "232m": 1, "238m": 1, "23g": 1, "24": 1, "240": [8, 17], "241m": 1, "244": 1, "246m": 1, "2483": 17, "249m": 1, "24g": 1, "25": 1, "2510": 17, "253m": 1, "258m": 1, "259x": 17, "25g": 1, "26": 1, "261m": 1, "266m": 1, "268m": 1, "26g": 1, "27": 1, "2743e": 17, "275m": 1, "27g": 1, "28": 1, "2813e": 17, "2825": 17, "282m": 1, "2830": 17, "283m": 1, "28680": 8, "28g": 1, "29": 1, "290m": 1, "292m": 1, "297m": 1, "29g": 1, "2_rsa_encod": [9, 11, 14], "2m": 1, "2mb": 1, "3": [1, 17, 18], "30": 1, "300m": 1, "305m": 1, "309m": 1, "30g": 1, "31": 1, "313m": 1, "317m": 1, "31g": 1, "32": 1, "321m": 1, "326m": 1, "328m": 1, "32g": 1, "33": 1, "334m": 1, "3357e": 17, "336m": 1, "3389": 17, "33g": 1, "34": 1, "343m": 1, "344m": 1, "34g": 1, "35": 1, "351m": 1, "352m": 1, "3598e": 17, "359m": 1, "35g": 1, "36": 1, "360": 1, "360m": 1, "365": 17, "367m": 1, "368m": 1, "36g": 1, "37": 1, "375m": 1, "377m": 1, "37g": 1, "38": 1, "383m": 1, "385m": 1, "38g": 1, "39": 1, "391m": 1, "393m": 1, "398m": 1, "39g": 1, "3m": 1, "3mb": 1, "4": [1, 14, 17, 18], "40": 1, "401m": 1, "406m": 1, "409m": 1, "40g": 1, "41": 1, "411": 17, "413m": 1, "4142": 1, "416m": 1, "41g": 1, "42": 1, "421m": 1, "424m": 1, "428m": 1, "42g": 1, "43": 1, "431m": 1, "436m": 1, "437m": 1, "4384e": 17, "43g": 1, "44": 1, "444m": 1, "445m": 1, "44g": 1, "45": 1, "451m": 1, "453": [8, 11, 14], "453m": 1, "454": 11, "4556e": 17, "459m": 1, "45g": 1, "46": [1, 3, 14], "461m": 1, "466m": 1, "46g": 1, "47": 1, "470m": 1, "474m": 1, "477m": 1, "47g": 1, "48": 1, "481m": 1, "48550": 18, "485m": 1, "489m": 1, "48g": 1, "49": 1, "493m": 1, "4950": 17, "496m": 1, "49g": 1, "4mb": 1, "5": [1, 17, 18], "50": [1, 17, 18], "500": 1, "5000": 18, "500m": 1, "504m": 1, "508m": 1, "50g": 1, "51": 1, "511m": 1, "515m": 1, "519m": 1, "51g": 1, "52": 1, "524m": 1, "526m": 1, "52g": 1, "53": 1, "532m": 1, "535m": 1, "539m": 1, "53g": 1, "54": 1, "542m": 1, "5468": 1, "548m": 1, "54g": 1, "55": 1, "550m": 1, "556m": 1, "55g": 1, "56": 1, "563m": 1, "56g": 1, "57": 1, "570m": 1, "571m": 1, "578m": 1, "57g": 1, "58": 1, "585m": 1, "586m": 1, "58g": 1, "59": 1, "593m": 1, "599m": 1, "59g": 1, "5m": 1, "5mb": 1, "6": [1, 17, 18], "60": [1, 8, 17, 18], "600m": 1, "601": 1, "606m": 1, "607m": 1, "60g": 1, "61": 1, "614m": 1, "61g": 1, "62": 1, "620m": 1, "621m": 1, "6238e": 17, "627": 14, "628m": 1, "62g": 1, "63": 1, "634m": 1, "635m": 1, "6367e": 17, "63g": 1, "64": 1, "640m": 1, "642m": 1, "647m": 1, "649m": 1, "64g": 1, "65": 1, "653m": 1, "655m": 1, "658m": 1, "65g": 1, "66": 1, "661m": 1, "665m": 1, "666m": 1, "66g": 1, "67": 1, "671m": 1, "672m": 1, "677m": 1, "678m": 1, "67g": 1, "68": 1, "684m": 1, "686m": 1, "68g": 1, "69": 1, "692m": 1, "693m": 1, "699m": 1, "69g": 1, "6gb": 1, "6m": 1, "6mb": 1, "6tb": 1, "7": [1, 17], "70": 1, "700m": 1, "7033": 17, "706m": 1, "707m": 1, "70g": 1, "71": 1, "713m": 1, "714m": 1, "719m": 1, "71g": 1, "72": 1, "720": 1, "721m": 1, "726m": 1, "727m": 1, "72g": 1, "73": 1, "733m": 1, "734m": 1, "739m": 1, "73g": 1, "74": 1, "740m": 1, "745m": 1, "747m": 1, "74g": 1, "75": 1, "752m": 1, "754m": 1, "759m": 1, "75g": 1, "76": 1, "762m": 1, "767m": 1, "769m": 1, "76g": 1, "77": 1, "773m": 1, "777m": 1, "77g": 1, "78": 1, "781m": 1, "785m": 1, "788m": 1, "78g": 1, "79": 1, "7927e": 17, "792m": 1, "794m": 1, "79g": 1, "7m": 1, "7mb": 1, "8": [1, 17], "80": 1, "800m": 1, "805m": 1, "807m": 1, "80g": 1, "81": 1, "810m": 1, "815m": 1, "816m": 1, "81g": 1, "82": 1, "822m": 1, "823m": 1, "829m": 1, "82g": 1, "83": 1, "830m": 1, "8329e": 17, "8330e": 17, "833m": 1, "837m": 1, "839m": 1, "83g": 1, "84": 1, "844m": 1, "845m": 1, "8476e": 17, "84g": 1, "85": 1, "850m": 1, "853m": 1, "855m": 1, "8587e": 17, "85g": 1, "86": 1, "860m": 1, "865m": 1, "868m": 1, "86g": 1, "87": [1, 17], "870m": 1, "875m": 1, "876m": 1, "87g": 1, "88": [1, 17], "882m": 1, "884m": 1, "888m": 1, "88g": 1, "89": 1, "892m": 1, "894m": 1, "899m": 1, "89g": 1, "89m": 1, "8ejr": 1, "8m": 1, "8mb": 1, "8tb": 1, "9": [1, 17, 18], "90": 1, "900m": 1, "906m": 1, "907m": 1, "90g": 1, "91": 1, "912m": 1, "915m": 1, "919m": 1, "91g": 1, "92": 1, "923m": 1, "925m": 1, "92g": 1, "93": 1, "930m": 1, "932m": 1, "938m": 1, "939m": 1, "93g": 1, "94": 1, "945m": 1, "94g": 1, "95": 1, "9519e": 17, "952m": 1, "958m": 1, "95g": 1, "96": [1, 17], "964m": 1, "965m": 1, "96g": 1, "97": 1, "970m": 1, "971m": 1, "9764e": 17, "977m": 1, "97g": 1, "98": 1, "983m": 1, "984m": 1, "989m": 1, "98g": 1, "99": 1, "991m": 1, "996m": 1, "999m": 1, "99g": 1, "9m": 1, "9mb": 1, "A": [12, 17, 18], "As": 8, "Be": 1, "By": 17, "For": [1, 17, 18], "If": [0, 17], "In": [7, 10], "No": 1, "Not": 1, "On": [17, 18], "One": 17, "The": [1, 17], "To": [1, 13], "_": 17, "__doc__": 1, "_classifierovr_torch": 17, "_must_": 17, "_scaler_numpi": 17, "_scaler_torch": 17, "_tsss_mc": 1, "ab": 8, "accuraci": 1, "activ": 1, "ad": 17, "addit": [17, 20], "after": 17, "aim": 13, "akin": 17, "alia": 17, "alink": 18, "all": [1, 7, 8, 14], "allow": 17, "along": 18, "alpha": [1, 17], "alpha_": [0, 16, 17], "alpha_per_target": 17, "alreadi": 18, "also": [1, 17, 18], "alwai": 18, "an": [1, 4, 9, 17], "analaysi": 17, "analog": 17, "analysi": [0, 13, 17, 18], "ani": [17, 20], "anim": 1, "append": [1, 4, 9], "appli": [1, 17], "approach": 17, "appropri": 17, "ar": [1, 8, 17, 18], "arang": 1, "arg": 17, "argument": [17, 20], "around": 8, "arrai": [1, 17], "arxiv": 18, "assum": 17, "attempt": 1, "attr": 17, "attribut": 17, "avail": [13, 17], "averag": [1, 18], "awar": [1, 17], "ax": [1, 8], "axi": 1, "b": [1, 17], "back": 17, "backend": 17, "bad": 1, "bar": [18, 20], "base": [17, 20], "baseestim": 17, "baselin": 1, "becaus": 8, "befor": [0, 8, 17], "begin": [1, 8], "between": [1, 17, 18], "biass": 17, "bie\u00dfmann": 17, "blankertz": 17, "bodypart": 1, "bool": [17, 20], "branch": 17, "briefli": [1, 8], "bring": 1, "build": 1, "built": 13, "c": 1, "call": 17, "callabl": 17, "can": [0, 1, 8, 17, 20], "cannot": 17, "case": 17, "cat": 18, "categor": 1, "cdot": 18, "center": 17, "ch_type": 1, "chanc": 1, "chang": [1, 17], "channel": [1, 8, 17], "cla": 17, "class": [17, 20], "classes_": [0, 16, 17], "classif": [2, 3, 7, 14, 17], "classifi": [0, 1, 15, 16], "clf": 17, "clone": [0, 16, 17], "cmap": [8, 17], "code": [1, 4, 7, 8, 9], "coef_": [0, 16, 17], "coefficeint": 17, "coeffici": 17, "collect": [0, 1, 16, 17], "color": 1, "column": 1, "com": 13, "combin": 1, "comparison": 8, "complet": 1, "comput": [1, 7, 10, 17, 18], "concaten": 1, "concatenate_raw": 1, "cond": 1, "cond_tag": 1, "condit": [1, 17], "conduct": [7, 10], "configur": 1, "connect": 17, "consequ": 1, "consid": [1, 17], "consult": 1, "content": [0, 1, 15], "context": 20, "contribut": 17, "conveni": [1, 8], "convers": 17, "copi": [0, 16, 17], "correct": [1, 17], "correl": 18, "cosin": [0, 15, 16, 17], "cosine_d": [0, 16, 17, 18], "coupl": [7, 10], "cours": 1, "cov": 17, "covari": [0, 1, 15, 16, 18], "covariance_": [0, 16, 17, 18], "cpu": 1, "creat": [1, 8, 17], "cross": [1, 17, 18], "crossnobi": 18, "crossvalid": [0, 15, 16], "csv": 1, "current": 17, "cv_euclidean": [0, 16, 17, 18], "cv_mahalanobi": [0, 16, 18], "cx_": [0, 8, 16, 17], "cy_": [0, 8, 16, 17], "d": [17, 18], "data": [1, 7, 8, 17, 18], "data_path": 1, "dataset": [1, 17], "decod": [0, 1, 3, 14, 15, 16], "default": [1, 17, 20], "defin": [1, 18], "degre": 17, "desir": 1, "detail": 17, "deviat": 17, "devic": 1, "di": [17, 18], "dict": [1, 17], "diedrichsen": 18, "differ": [1, 17], "dim": [0, 1, 16, 17], "dimens": [1, 8, 17, 18], "dimension": 17, "disabl": 20, "disentangl": 17, "dissimilar": 18, "distanc": 18, "distinct": 17, "distinguish": 1, "distribut": 18, "dive": 13, "do": [0, 1, 4, 8, 9, 17], "document": 1, "doe": 17, "domain": 8, "download": [1, 4, 7, 8, 9], "drop": 1, "dtype": [1, 18], "dure": 18, "d\u00e4hne": 17, "e": [1, 17], "each": 17, "easi": 1, "effect": 17, "either": [1, 18], "ejaz": 18, "element": 18, "elimin": 18, "els": 1, "empir": 17, "enabl": 20, "enable_metadata_rout": 17, "encod": [0, 6, 10, 11, 14], "encoders_intro": [4, 6, 14], "end": [1, 4, 8, 9], "ensur": 1, "enumer": 1, "epoch": 1, "epochsarrai": 1, "equal": 17, "error": [1, 17], "estim": [0, 1, 8, 15, 16, 18], "estimator_": [0, 16, 17], "estimators_": [0, 16, 17], "euclidean": [0, 8, 15, 16, 17], "event": 1, "event_id": 1, "exampl": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 17, 18], "examples_jupyt": 7, "examples_python": 7, "except": 17, "execut": [3, 6, 11, 12, 14], "exist": 17, "expect": 17, "f": [1, 17], "f_i": 1, "fabianschneid": 13, "face": 1, "fall": 17, "fals": 17, "familiaris": 8, "featur": [1, 17, 18], "fif": 1, "fig": [1, 8], "file": [1, 3, 6, 11, 12, 14], "filenam": 1, "final": [1, 17, 18], "find": 13, "find_ev": 1, "first": [1, 4, 8, 9, 17], "fit": [0, 1, 8, 16, 17, 18], "fit_intercept": 17, "fit_transform": [0, 16, 17], "float": 17, "float32": [1, 17], "float64": 18, "fname": 1, "fold": [1, 18], "follow": [0, 7, 10, 17], "format": 1, "found": [0, 1], "frac": [17, 18], "free": 1, "freedom": 17, "from": [1, 3, 6, 8, 11, 12, 14, 17, 18], "from_numpi": [1, 17], "frontier": 17, "full": [1, 4, 8, 9, 13, 17], "full_rdm": [0, 16, 17], "func": 17, "function": [17, 18], "g": 17, "galleri": [1, 4, 7, 8, 9, 14], "gener": [1, 4, 7, 8, 9, 17], "get": 0, "get_data": 1, "getcwd": [4, 9], "git": 13, "github": 13, "given": [8, 17, 20], "go": [1, 4, 8, 9], "goal": 1, "gpu": [1, 13], "grab": 1, "grad": 1, "gradiomet": 1, "gramfort": 17, "greatli": 17, "grisel": 17, "group": [0, 16, 17], "guid": 17, "gz": 1, "g\u00f6rgen": 17, "h": 18, "ha": 17, "hauf": 17, "have": [0, 1, 13, 17], "hayn": 17, "head": 1, "here": [0, 1, 13, 17, 18], "home": [1, 4, 9], "how": [1, 17], "http": [1, 13], "human": 1, "i": [1, 4, 8, 9, 13, 17, 18], "id": 1, "ignor": [1, 17], "imag": 1, "implement": 17, "import": [1, 4, 8, 9, 17, 18], "imshow": [8, 17], "indic": [17, 18], "individu": 17, "info": 1, "inform": [1, 17, 18], "input": [17, 18], "insid": 17, "instal": [0, 13], "instead": 17, "instruct": 0, "int": 17, "intercept": 17, "intercept_": [0, 16, 17], "interpret": 17, "inv": [1, 18], "invers": [17, 18], "inverse_transform": [0, 1, 16, 17], "invert": 17, "io": 1, "ipynb": [1, 4, 8, 9], "irrelev": 17, "item": 1, "iter": 17, "its": 18, "j": [17, 18], "job": 17, "joblib": 20, "join": 1, "journal": 17, "json": 1, "jupyt": [1, 4, 7, 8, 9], "k": [1, 17], "king": 17, "kingjr": 17, "kriegeskort": [17, 18], "kwarg": [17, 20], "label": 1, "larg": 17, "last": 17, "learn": 17, "ledoit": 17, "ledoitwolf": [1, 17], "length": 17, "less": 1, "let": [1, 8, 17], "level": [1, 17], "librari": 13, "like": [1, 8, 17], "linalg": [1, 18], "linear": 17, "linear_model": 17, "linspac": 8, "list": [1, 17], "ll": 8, "load": 1, "load_iri": 17, "locat": 1, "logspac": [1, 17], "look": 1, "loop": 1, "m": 17, "machin": 17, "mahalanobi": [0, 15, 16], "mai": 1, "make": [1, 13, 17], "make_pipelin": 1, "manag": 20, "manner": 18, "map": 1, "match": 1, "math": [0, 8, 15, 16, 17], "mathbf": 18, "matplotlib": [1, 8, 17], "matric": [17, 18], "matrix": [1, 17, 18], "max": 8, "max_trigg": 1, "mb": [1, 3, 6, 11, 12, 14], "mean": [1, 17], "mean_": [0, 16, 17], "meaningfulli": 17, "measur": 18, "mechan": 17, "meg": 1, "meineck": 17, "mem": [3, 6, 11, 12, 14], "meta": 17, "metadata": [1, 17], "metadata_rout": 17, "method": [1, 13, 17], "metric": [17, 18], "michel": 17, "min_dur": 1, "minut": [1, 4, 8, 9], "mne": 1, "mne_data": 1, "model": [1, 8, 17], "model_select": 1, "modul": [0, 15], "more": [1, 17, 18], "mu": 17, "multi": [17, 18], "multipl": 17, "multivari": [7, 13, 17], "mv": [4, 9, 17, 18], "mvpy": [0, 1, 4, 7, 8, 9, 10], "my": 13, "n": [12, 17, 18], "n_channel": 17, "n_job": [0, 1, 16, 17], "n_run": 1, "n_split": 1, "n_trial": 17, "name": 17, "natur": 1, "ndarrai": [17, 18], "neuro": 17, "neuroimag": [7, 17, 18], "neurosci": 17, "new": 1, "next": 1, "nice": [1, 18], "nili": 18, "none": [1, 8, 17], "normal": [8, 17, 18], "normalis": 17, "note": [1, 17, 18], "notebook": [1, 4, 7, 8, 9], "now": [1, 8], "np": [1, 17, 18], "number": 17, "numpi": [1, 17, 18], "o": [4, 9, 17], "object": [17, 20], "obtain": [1, 17], "on_split_miss": 1, "onc": [1, 13, 17], "one": 17, "ones": 1, "onli": [1, 8, 17], "oo": 1, "option": 17, "origin": [1, 17], "osf": 1, "other": 17, "otherwis": [0, 17], "our": [1, 8, 17], "ourselv": 8, "out": 1, "outcom": 17, "output": 1, "over": [1, 17, 18], "ovo": 17, "ovr": 17, "ow": 17, "packag": [0, 15], "pad": 17, "panda": 1, "paper": 1, "parallel": 17, "paramet": [17, 18, 20], "parrai": 1, "part": 13, "part1": 1, "part2": 1, "particip": 1, "particularli": 13, "pass": 17, "patch": 20, "path": [4, 9], "pattern": [1, 13, 17, 18], "pattern_": [0, 1, 16, 17], "pd": 1, "pearson": 18, "pearsonr": [0, 15, 16, 17], "pearsonr_d": [0, 16, 17, 18], "pedregosa": 17, "penalti": 17, "perform": [1, 17], "phd": 13, "pi": 8, "pick": 1, "pick_typ": 1, "pip": 13, "pipelin": [1, 17], "pleas": [0, 17], "plot": [1, 17], "plot_topomap": 1, "plt": [1, 8, 17], "point": [1, 17], "pre": 17, "precis": [17, 18], "precision_": [0, 16, 17], "predict": [0, 1, 16, 17], "predict_proba": [0, 16, 17], "preload": 1, "preprocess": 17, "princip": [17, 18], "print": [1, 4, 8, 9, 17], "probabl": 17, "proceed": 0, "produc": 1, "progress": [17, 20], "progressbar": [0, 15, 16], "project": 1, "provid": 17, "provost": 18, "py": [1, 3, 4, 6, 8, 9, 11, 14], "pyplot": [1, 8, 17], "python": [1, 4, 7, 8, 9, 13, 17], "quickli": 1, "r": [1, 17, 18], "rais": 17, "randint": 17, "randn": 18, "rang": 1, "rank": [0, 15, 16], "raw": 1, "rdbu_r": [8, 17], "rdm": [7, 10, 11, 14, 17], "rdm_": [0, 8, 16, 17], "read": 0, "read_csv": 1, "read_raw_fif": 1, "readi": 8, "real": 8, "record": 17, "red": 1, "refer": [17, 18], "regress": 17, "rel": 1, "relev": 17, "reliabl": 18, "remain": 8, "report": 20, "represent": [0, 13, 17], "request": 17, "requir": [4, 7, 9, 10, 17], "research": 17, "respect": 18, "rest": 17, "result": 17, "retain": 17, "return": [17, 18], "return_x_i": 17, "ridg": 17, "ridgecv": [0, 15, 16], "roughli": 1, "rout": 17, "row": 1, "rsa": [0, 7, 8, 10, 11, 14, 15, 16], "run": [1, 4, 8, 9, 17], "runner": [1, 4, 9], "s0047": 17, "same": [1, 17], "sampl": [1, 17, 18], "sample_subject_": 1, "sample_weight": 17, "saw": 1, "scale": [1, 17], "scale_": [0, 16, 17], "scaler": [0, 1, 15, 16], "scheme": 1, "scikit": 17, "score": 1, "script": [1, 4, 8, 9], "searchlight": 17, "second": [1, 4, 8, 9, 17], "section": [0, 7, 10], "see": [8, 17, 18], "select": 17, "selet": 17, "self": 17, "sens": 17, "separ": 17, "set": [1, 17], "set_config": 17, "set_fit_request": [0, 16, 17], "set_xlabel": 1, "set_ylabel": 1, "setup": [1, 4, 9], "shape": [1, 8, 17, 18], "shape_": [0, 16, 17], "should": 17, "shrinkag": 17, "shrinkage_": [0, 16, 17], "sigma": 17, "signal": [0, 15, 16], "similar": [0, 8, 13, 17, 18], "similartii": 17, "simpl": [17, 20], "simpli": [13, 17], "simul": 8, "sin": 8, "size": [8, 17, 18], "skf": 1, "sklearn": [1, 17], "slide": [0, 1, 15, 16], "so": [0, 1], "some": [4, 8, 9, 13, 17], "sometim": 18, "sourc": [0, 1, 4, 7, 8, 9], "spearman": 18, "spearmanr": [0, 15, 16, 17], "spearmanr_d": [0, 16, 17, 18], "specifi": 1, "speed": 1, "sphinx": [1, 4, 7, 8, 9], "split": 1, "sqrt": 18, "squar": 18, "squeez": 1, "stack": 8, "standard": [1, 17], "standardscal": 17, "start": 0, "std": 17, "step": [7, 10, 17], "sti101": 1, "stim": 1, "stimulu": 1, "str": [1, 17], "strategi": 17, "stratifiedkfold": 1, "structur": [1, 8], "sub": 17, "submodul": [0, 15, 16], "subpackag": [0, 15], "subplot": [1, 8], "succesfulli": 1, "sum": 18, "sum_": 18, "suppli": 17, "support": [13, 17], "sure": 17, "swapax": 18, "sy": [4, 9], "syntax": 8, "system": [4, 9, 17], "t": [1, 4, 9, 17, 18], "t4yjp": 1, "take": 1, "tar": 1, "target": [1, 17], "task": 1, "technic": 18, "tensor": [1, 17, 18], "tesor": 18, "test": 1, "text": 18, "th": 18, "than": 1, "them": 17, "therefor": 18, "thi": [1, 4, 8, 9, 17, 18], "thirion": 17, "though": 1, "through": [7, 10], "ti": 18, "time": [1, 4, 8, 9, 17], "timepoint": 8, "tmax": 1, "tmin": 1, "to_numpi": [0, 16, 17], "to_torch": [0, 1, 16, 17], "too": 18, "top": [0, 16, 17], "torch": [1, 8, 17, 18], "torch_ridg": 17, "total": [1, 3, 4, 6, 8, 9, 11, 12, 14], "tqdm": 20, "tqdm_joblib": [0, 16, 20], "tqdm_object": 20, "train": 1, "transform": [0, 1, 8, 16, 17], "trial": [1, 8, 17, 18], "triangular": 17, "trigger": 1, "true": [1, 17, 20], "tupl": 17, "turn": 8, "two": 17, "type": [17, 18], "u": 1, "unchang": 17, "union": [17, 18], "unit": 17, "unless": 17, "unrank": 18, "untar": 1, "up": 1, "updat": 17, "upper": 17, "us": [1, 7, 10, 13, 17, 18], "user": 17, "util": [0, 1, 15, 16, 17], "v": 17, "valid": [1, 17, 18], "valu": 1, "vanderpla": 17, "var_": [0, 16, 17], "varianc": 17, "varoquaux": 17, "vector": [1, 17, 18], "vectoris": 18, "verbos": [0, 1, 16, 17], "version": [1, 17], "visual": 1, "visual_92_categori": 1, "visual_stimuli": 1, "visualis": 1, "vmax": 8, "vmin": 8, "voxel": 18, "w": 17, "walk": [7, 10], "walther": 18, "want": [1, 8, 17], "warn": 1, "we": [1, 4, 7, 8, 9, 10, 17], "weight": 17, "well": [1, 17], "when": 17, "where": [17, 18], "wherea": 17, "wherein": 17, "whether": [17, 20], "which": [1, 17], "while": [1, 17], "whiten": [1, 17], "whitener_": [0, 1, 16, 17], "wise": 17, "wish": [1, 17], "with_mean": 17, "with_std": 17, "without": 17, "wolf": 17, "won": [4, 9], "work": [1, 4, 9, 17], "would": [1, 8, 17], "wrapper": 18, "write": 13, "x": [1, 8, 17, 18], "x_": [17, 18], "x_i": [17, 18], "x_if": 1, "x_j": 18, "x_nf": 1, "x_tr": 1, "y": [1, 17, 18], "y_": 18, "y_h": 1, "y_i": 18, "y_j": 18, "y_tr": 1, "yet": 0, "you": [0, 1, 8, 13, 17], "your": [1, 4, 9, 17, 18], "z": 17, "zareamoghaddam": 18, "zero": [1, 8, 17], "zip": [1, 4, 7, 8, 9], "\u00df": 17, "\u03c3": 18}, "titles": ["Documentation", "1. Classification", "Decoders", "Computation times", "Encoders", "Encoders", "Computation times", "Examples", "1. Computing RDMs", "2. RSA encoders", "Representational similarity analysis", "Computation times", "Computation times", "\ud83d\ude80 Getting started with MVPy", "Computation times", "mvpy", "mvpy package", "mvpy.estimators package", "mvpy.math package", "mvpy.signal package", "mvpy.utilities package"], "titleterms": {"1": [1, 8], "2": 9, "analysi": [7, 10], "can": 13, "classif": 1, "classifi": 17, "comput": [3, 6, 8, 11, 12, 14], "content": [16, 17, 18, 19, 20], "cosin": 18, "covari": 17, "crossvalid": 18, "decod": [2, 7, 17], "do": 13, "document": [0, 13], "encod": [4, 5, 7, 9], "estim": 17, "euclidean": 18, "exampl": 7, "get": 13, "mahalanobi": 18, "math": 18, "modul": [16, 17, 18, 19, 20], "mvpy": [13, 15, 16, 17, 18, 19, 20], "packag": [16, 17, 18, 19, 20], "pearsonr": 18, "progressbar": 20, "rank": 18, "rdm": 8, "represent": [7, 10], "ridgecv": 17, "rsa": [9, 17], "scaler": 17, "signal": 19, "similar": [7, 10], "slide": 17, "so": 13, "spearmanr": 18, "start": 13, "submodul": [17, 18, 20], "subpackag": 16, "time": [3, 6, 11, 12, 14], "util": 20, "what": 13}})