Search.setIndex({"alltitles": {"1. Computing RDMs": [[8, null]], "2. RSA encoders": [[9, null]], "Computation times": [[3, null], [6, null], [11, null], [12, null], [14, null]], "Decoders": [[1, null], [2, null], [7, "decoders"]], "Documentation": [[0, null]], "Encoders": [[4, null], [5, null], [7, "encoders"]], "Examples": [[7, null]], "Module contents": [[16, "module-mvpy"], [17, "module-mvpy.estimators"], [18, "module-mvpy.math"], [19, "module-mvpy.signal"], [20, "module-mvpy.utilities"]], "Representational similarity analysis": [[7, "representational-similarity-analysis"], [10, null]], "Submodules": [[17, "submodules"], [18, "submodules"], [20, "submodules"]], "Subpackages": [[16, "subpackages"]], "mvpy": [[15, null]], "mvpy package": [[16, null]], "mvpy.estimators package": [[17, null]], "mvpy.estimators.covariance module": [[17, "module-mvpy.estimators.covariance"]], "mvpy.estimators.decoder module": [[17, "module-mvpy.estimators.decoder"]], "mvpy.estimators.ridgecv module": [[17, "module-mvpy.estimators.ridgecv"]], "mvpy.estimators.rsa module": [[17, "module-mvpy.estimators.rsa"]], "mvpy.estimators.scaler module": [[17, "module-mvpy.estimators.scaler"]], "mvpy.estimators.sliding module": [[17, "module-mvpy.estimators.sliding"]], "mvpy.math package": [[18, null]], "mvpy.math.cosine module": [[18, "module-mvpy.math.cosine"]], "mvpy.math.crossvalidated module": [[18, "module-mvpy.math.crossvalidated"]], "mvpy.math.euclidean module": [[18, "module-mvpy.math.euclidean"]], "mvpy.math.mahalanobis module": [[18, "module-mvpy.math.mahalanobis"]], "mvpy.math.pearsonr module": [[18, "module-mvpy.math.pearsonr"]], "mvpy.math.rank module": [[18, "module-mvpy.math.rank"]], "mvpy.math.spearmanr module": [[18, "module-mvpy.math.spearmanr"]], "mvpy.signal package": [[19, null]], "mvpy.utilities package": [[20, null]], "mvpy.utilities.progressbar module": [[20, "module-mvpy.utilities.progressbar"]], "\ud83d\udc23 So what can MVPy do?": [[13, "so-what-can-mvpy-do"]], "\ud83d\udd0e Documentation": [[13, "documentation"]], "\ud83d\ude80 Getting started with MVPy": [[13, null]]}, "docnames": ["documentation/index", "examples/decoders/decoders_intro", "examples/decoders/index", "examples/decoders/sg_execution_times", "examples/encoders/encoders_intro", "examples/encoders/index", "examples/encoders/sg_execution_times", "examples/index", "examples/rsa/1_rsa_intro", "examples/rsa/2_rsa_encoder", "examples/rsa/index", "examples/rsa/sg_execution_times", "examples/sg_execution_times", "index", "sg_execution_times", "source/modules", "source/mvpy", "source/mvpy.estimators", "source/mvpy.math", "source/mvpy.signal", "source/mvpy.utilities"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["documentation/index.rst", "examples/decoders/decoders_intro.rst", "examples/decoders/index.rst", "examples/decoders/sg_execution_times.rst", "examples/encoders/encoders_intro.rst", "examples/encoders/index.rst", "examples/encoders/sg_execution_times.rst", "examples/index.rst", "examples/rsa/1_rsa_intro.rst", "examples/rsa/2_rsa_encoder.rst", "examples/rsa/index.rst", "examples/rsa/sg_execution_times.rst", "examples/sg_execution_times.rst", "index.rst", "sg_execution_times.rst", "source/modules.rst", "source/mvpy.rst", "source/mvpy.estimators.rst", "source/mvpy.math.rst", "source/mvpy.signal.rst", "source/mvpy.utilities.rst"], "indexentries": {"alpha_ (mvpy.estimators.decoder.decoder attribute)": [[17, "mvpy.estimators.decoder.Decoder.alpha_", false]], "alpha_ (mvpy.estimators.ridgecv.ridgecv attribute)": [[17, "mvpy.estimators.ridgecv.RidgeCV.alpha_", false]], "clone() (mvpy.estimators.covariance.covariance method)": [[17, "mvpy.estimators.covariance.Covariance.clone", false]], "clone() (mvpy.estimators.decoder.decoder method)": [[17, "mvpy.estimators.decoder.Decoder.clone", false]], "clone() (mvpy.estimators.ridgecv.ridgecv method)": [[17, "mvpy.estimators.ridgecv.RidgeCV.clone", false]], "clone() (mvpy.estimators.rsa.rsa method)": [[17, "mvpy.estimators.rsa.RSA.clone", false]], "clone() (mvpy.estimators.scaler.scaler method)": [[17, "mvpy.estimators.scaler.Scaler.clone", false]], "clone() (mvpy.estimators.sliding.sliding method)": [[17, "mvpy.estimators.sliding.Sliding.clone", false]], "coef_ (mvpy.estimators.decoder.decoder attribute)": [[17, "mvpy.estimators.decoder.Decoder.coef_", false]], "coef_ (mvpy.estimators.ridgecv.ridgecv attribute)": [[17, "mvpy.estimators.ridgecv.RidgeCV.coef_", false]], "collect() (mvpy.estimators.sliding.sliding method)": [[17, "mvpy.estimators.sliding.Sliding.collect", false]], "cosine() (in module mvpy.math.cosine)": [[18, "mvpy.math.cosine.cosine", false]], "cosine_d() (in module mvpy.math.cosine)": [[18, "mvpy.math.cosine.cosine_d", false]], "covariance (class in mvpy.estimators.covariance)": [[17, "mvpy.estimators.covariance.Covariance", false]], "covariance_ (mvpy.estimators.covariance.covariance attribute)": [[17, "mvpy.estimators.covariance.Covariance.covariance_", false]], "cv_euclidean() (in module mvpy.math.crossvalidated)": [[18, "mvpy.math.crossvalidated.cv_euclidean", false]], "cv_mahalanobis() (in module mvpy.math.crossvalidated)": [[18, "mvpy.math.crossvalidated.cv_mahalanobis", false]], "cx_ (mvpy.estimators.rsa.rsa attribute)": [[17, "mvpy.estimators.rsa.RSA.cx_", false]], "cy_ (mvpy.estimators.rsa.rsa attribute)": [[17, "mvpy.estimators.rsa.RSA.cy_", false]], "decoder (class in mvpy.estimators.decoder)": [[17, "mvpy.estimators.decoder.Decoder", false]], "estimator (mvpy.estimators.rsa.rsa attribute)": [[17, "mvpy.estimators.rsa.RSA.estimator", false]], "estimator_ (mvpy.estimators.decoder.decoder attribute)": [[17, "mvpy.estimators.decoder.Decoder.estimator_", false]], "estimators_ (mvpy.estimators.sliding.sliding attribute)": [[17, "mvpy.estimators.sliding.Sliding.estimators_", false]], "euclidean() (in module mvpy.math.euclidean)": [[18, "mvpy.math.euclidean.euclidean", false]], "fit() (mvpy.estimators.covariance.covariance method)": [[17, "mvpy.estimators.covariance.Covariance.fit", false]], "fit() (mvpy.estimators.decoder.decoder method)": [[17, "mvpy.estimators.decoder.Decoder.fit", false]], "fit() (mvpy.estimators.ridgecv.ridgecv method)": [[17, "mvpy.estimators.ridgecv.RidgeCV.fit", false]], "fit() (mvpy.estimators.rsa.rsa method)": [[17, "mvpy.estimators.rsa.RSA.fit", false]], "fit() (mvpy.estimators.scaler.scaler method)": [[17, "mvpy.estimators.scaler.Scaler.fit", false]], "fit() (mvpy.estimators.sliding.sliding method)": [[17, "mvpy.estimators.sliding.Sliding.fit", false]], "fit_transform() (mvpy.estimators.covariance.covariance method)": [[17, "mvpy.estimators.covariance.Covariance.fit_transform", false]], "fit_transform() (mvpy.estimators.rsa.rsa method)": [[17, "mvpy.estimators.rsa.RSA.fit_transform", false]], "fit_transform() (mvpy.estimators.scaler.scaler method)": [[17, "mvpy.estimators.scaler.Scaler.fit_transform", false]], "fit_transform() (mvpy.estimators.sliding.sliding method)": [[17, "mvpy.estimators.sliding.Sliding.fit_transform", false]], "full_rdm() (mvpy.estimators.rsa.rsa method)": [[17, "mvpy.estimators.rsa.RSA.full_rdm", false]], "grouped (mvpy.estimators.rsa.rsa attribute)": [[17, "mvpy.estimators.rsa.RSA.grouped", false]], "intercept_ (mvpy.estimators.decoder.decoder attribute)": [[17, "mvpy.estimators.decoder.Decoder.intercept_", false]], "intercept_ (mvpy.estimators.ridgecv.ridgecv attribute)": [[17, "mvpy.estimators.ridgecv.RidgeCV.intercept_", false]], "inverse_transform() (mvpy.estimators.scaler.scaler method)": [[17, "mvpy.estimators.scaler.Scaler.inverse_transform", false]], "mahalanobis() (in module mvpy.math.mahalanobis)": [[18, "mvpy.math.mahalanobis.mahalanobis", false]], "mean_ (mvpy.estimators.scaler.scaler attribute)": [[17, "mvpy.estimators.scaler.Scaler.mean_", false]], "module": [[16, "module-mvpy", false], [17, "module-mvpy.estimators", false], [17, "module-mvpy.estimators.covariance", false], [17, "module-mvpy.estimators.decoder", false], [17, "module-mvpy.estimators.ridgecv", false], [17, "module-mvpy.estimators.rsa", false], [17, "module-mvpy.estimators.scaler", false], [17, "module-mvpy.estimators.sliding", false], [18, "module-mvpy.math", false], [18, "module-mvpy.math.cosine", false], [18, "module-mvpy.math.crossvalidated", false], [18, "module-mvpy.math.euclidean", false], [18, "module-mvpy.math.mahalanobis", false], [18, "module-mvpy.math.pearsonr", false], [18, "module-mvpy.math.rank", false], [18, "module-mvpy.math.spearmanr", false], [19, "module-mvpy.signal", false], [20, "module-mvpy.utilities", false], [20, "module-mvpy.utilities.progressbar", false]], "mvpy": [[16, "module-mvpy", false]], "mvpy.estimators": [[17, "module-mvpy.estimators", false]], "mvpy.estimators.covariance": [[17, "module-mvpy.estimators.covariance", false]], "mvpy.estimators.decoder": [[17, "module-mvpy.estimators.decoder", false]], "mvpy.estimators.ridgecv": [[17, "module-mvpy.estimators.ridgecv", false]], "mvpy.estimators.rsa": [[17, "module-mvpy.estimators.rsa", false]], "mvpy.estimators.scaler": [[17, "module-mvpy.estimators.scaler", false]], "mvpy.estimators.sliding": [[17, "module-mvpy.estimators.sliding", false]], "mvpy.math": [[18, "module-mvpy.math", false]], "mvpy.math.cosine": [[18, "module-mvpy.math.cosine", false]], "mvpy.math.crossvalidated": [[18, "module-mvpy.math.crossvalidated", false]], "mvpy.math.euclidean": [[18, "module-mvpy.math.euclidean", false]], "mvpy.math.mahalanobis": [[18, "module-mvpy.math.mahalanobis", false]], "mvpy.math.pearsonr": [[18, "module-mvpy.math.pearsonr", false]], "mvpy.math.rank": [[18, "module-mvpy.math.rank", false]], "mvpy.math.spearmanr": [[18, "module-mvpy.math.spearmanr", false]], "mvpy.signal": [[19, "module-mvpy.signal", false]], "mvpy.utilities": [[20, "module-mvpy.utilities", false]], "mvpy.utilities.progressbar": [[20, "module-mvpy.utilities.progressbar", false]], "n_jobs (mvpy.estimators.rsa.rsa attribute)": [[17, "mvpy.estimators.rsa.RSA.n_jobs", false]], "pattern_ (mvpy.estimators.decoder.decoder attribute)": [[17, "mvpy.estimators.decoder.Decoder.pattern_", false]], "pearsonr() (in module mvpy.math.pearsonr)": [[18, "mvpy.math.pearsonr.pearsonr", false]], "pearsonr_d() (in module mvpy.math.pearsonr)": [[18, "mvpy.math.pearsonr.pearsonr_d", false]], "precision_ (mvpy.estimators.covariance.covariance attribute)": [[17, "mvpy.estimators.covariance.Covariance.precision_", false]], "predict() (mvpy.estimators.decoder.decoder method)": [[17, "mvpy.estimators.decoder.Decoder.predict", false]], "predict() (mvpy.estimators.ridgecv.ridgecv method)": [[17, "mvpy.estimators.ridgecv.RidgeCV.predict", false]], "predict() (mvpy.estimators.sliding.sliding method)": [[17, "mvpy.estimators.sliding.Sliding.predict", false]], "predict_proba() (mvpy.estimators.sliding.sliding method)": [[17, "mvpy.estimators.sliding.Sliding.predict_proba", false]], "progressbar (class in mvpy.utilities.progressbar)": [[20, "mvpy.utilities.progressbar.Progressbar", false]], "rank() (in module mvpy.math.rank)": [[18, "mvpy.math.rank.rank", false]], "rdm_ (mvpy.estimators.rsa.rsa attribute)": [[17, "mvpy.estimators.rsa.RSA.rdm_", false]], "ridgecv (class in mvpy.estimators.ridgecv)": [[17, "mvpy.estimators.ridgecv.RidgeCV", false]], "rsa (class in mvpy.estimators.rsa)": [[17, "mvpy.estimators.rsa.RSA", false]], "scale_ (mvpy.estimators.scaler.scaler attribute)": [[17, "mvpy.estimators.scaler.Scaler.scale_", false]], "scaler (class in mvpy.estimators.scaler)": [[17, "mvpy.estimators.scaler.Scaler", false]], "set_fit_request() (mvpy.estimators.scaler.scaler method)": [[17, "mvpy.estimators.scaler.Scaler.set_fit_request", false]], "shape_ (mvpy.estimators.scaler.scaler attribute)": [[17, "mvpy.estimators.scaler.Scaler.shape_", false]], "shrinkage_ (mvpy.estimators.covariance.covariance attribute)": [[17, "mvpy.estimators.covariance.Covariance.shrinkage_", false]], "sliding (class in mvpy.estimators.sliding)": [[17, "mvpy.estimators.sliding.Sliding", false]], "spearmanr() (in module mvpy.math.spearmanr)": [[18, "mvpy.math.spearmanr.spearmanr", false]], "spearmanr_d() (in module mvpy.math.spearmanr)": [[18, "mvpy.math.spearmanr.spearmanr_d", false]], "to_numpy() (mvpy.estimators.rsa.rsa method)": [[17, "mvpy.estimators.rsa.RSA.to_numpy", false]], "to_torch() (mvpy.estimators.rsa.rsa method)": [[17, "mvpy.estimators.rsa.RSA.to_torch", false]], "tqdm_joblib() (in module mvpy.utilities.progressbar)": [[20, "mvpy.utilities.progressbar.tqdm_joblib", false]], "transform() (mvpy.estimators.covariance.covariance method)": [[17, "mvpy.estimators.covariance.Covariance.transform", false]], "transform() (mvpy.estimators.rsa.rsa method)": [[17, "mvpy.estimators.rsa.RSA.transform", false]], "transform() (mvpy.estimators.scaler.scaler method)": [[17, "mvpy.estimators.scaler.Scaler.transform", false]], "transform() (mvpy.estimators.sliding.sliding method)": [[17, "mvpy.estimators.sliding.Sliding.transform", false]], "var_ (mvpy.estimators.scaler.scaler attribute)": [[17, "mvpy.estimators.scaler.Scaler.var_", false]], "verbose (mvpy.estimators.rsa.rsa attribute)": [[17, "mvpy.estimators.rsa.RSA.verbose", false]], "whitener_ (mvpy.estimators.covariance.covariance attribute)": [[17, "mvpy.estimators.covariance.Covariance.whitener_", false]]}, "objects": {"": [[16, 0, 0, "-", "mvpy"]], "mvpy": [[17, 0, 0, "-", "estimators"], [18, 0, 0, "-", "math"], [19, 0, 0, "-", "signal"], [20, 0, 0, "-", "utilities"]], "mvpy.estimators": [[17, 0, 0, "-", "covariance"], [17, 0, 0, "-", "decoder"], [17, 0, 0, "-", "ridgecv"], [17, 0, 0, "-", "rsa"], [17, 0, 0, "-", "scaler"], [17, 0, 0, "-", "sliding"]], "mvpy.estimators.covariance": [[17, 1, 1, "", "Covariance"]], "mvpy.estimators.covariance.Covariance": [[17, 2, 1, "", "clone"], [17, 3, 1, "", "covariance_"], [17, 2, 1, "", "fit"], [17, 2, 1, "", "fit_transform"], [17, 3, 1, "", "precision_"], [17, 3, 1, "", "shrinkage_"], [17, 2, 1, "", "transform"], [17, 3, 1, "", "whitener_"]], "mvpy.estimators.decoder": [[17, 1, 1, "", "Decoder"]], "mvpy.estimators.decoder.Decoder": [[17, 3, 1, "", "alpha_"], [17, 2, 1, "", "clone"], [17, 3, 1, "", "coef_"], [17, 3, 1, "", "estimator_"], [17, 2, 1, "", "fit"], [17, 3, 1, "", "intercept_"], [17, 3, 1, "", "pattern_"], [17, 2, 1, "", "predict"]], "mvpy.estimators.ridgecv": [[17, 1, 1, "", "RidgeCV"]], "mvpy.estimators.ridgecv.RidgeCV": [[17, 3, 1, "", "alpha_"], [17, 2, 1, "", "clone"], [17, 3, 1, "", "coef_"], [17, 2, 1, "", "fit"], [17, 3, 1, "", "intercept_"], [17, 2, 1, "", "predict"]], "mvpy.estimators.rsa": [[17, 1, 1, "", "RSA"]], "mvpy.estimators.rsa.RSA": [[17, 2, 1, "", "clone"], [17, 3, 1, "", "cx_"], [17, 3, 1, "", "cy_"], [17, 3, 1, "", "estimator"], [17, 2, 1, "", "fit"], [17, 2, 1, "", "fit_transform"], [17, 2, 1, "", "full_rdm"], [17, 3, 1, "", "grouped"], [17, 3, 1, "", "n_jobs"], [17, 3, 1, "", "rdm_"], [17, 2, 1, "", "to_numpy"], [17, 2, 1, "", "to_torch"], [17, 2, 1, "", "transform"], [17, 3, 1, "", "verbose"]], "mvpy.estimators.scaler": [[17, 1, 1, "", "Scaler"]], "mvpy.estimators.scaler.Scaler": [[17, 2, 1, "", "clone"], [17, 2, 1, "", "fit"], [17, 2, 1, "", "fit_transform"], [17, 2, 1, "", "inverse_transform"], [17, 3, 1, "", "mean_"], [17, 3, 1, "", "scale_"], [17, 2, 1, "", "set_fit_request"], [17, 3, 1, "", "shape_"], [17, 2, 1, "", "transform"], [17, 3, 1, "", "var_"]], "mvpy.estimators.sliding": [[17, 1, 1, "", "Sliding"]], "mvpy.estimators.sliding.Sliding": [[17, 2, 1, "", "clone"], [17, 2, 1, "", "collect"], [17, 3, 1, "", "estimators_"], [17, 2, 1, "", "fit"], [17, 2, 1, "", "fit_transform"], [17, 2, 1, "", "predict"], [17, 2, 1, "", "predict_proba"], [17, 2, 1, "", "transform"]], "mvpy.math": [[18, 0, 0, "-", "cosine"], [18, 0, 0, "-", "crossvalidated"], [18, 0, 0, "-", "euclidean"], [18, 0, 0, "-", "mahalanobis"], [18, 0, 0, "-", "pearsonr"], [18, 0, 0, "-", "rank"], [18, 0, 0, "-", "spearmanr"]], "mvpy.math.cosine": [[18, 4, 1, "", "cosine"], [18, 4, 1, "", "cosine_d"]], "mvpy.math.crossvalidated": [[18, 4, 1, "", "cv_euclidean"], [18, 4, 1, "", "cv_mahalanobis"]], "mvpy.math.euclidean": [[18, 4, 1, "", "euclidean"]], "mvpy.math.mahalanobis": [[18, 4, 1, "", "mahalanobis"]], "mvpy.math.pearsonr": [[18, 4, 1, "", "pearsonr"], [18, 4, 1, "", "pearsonr_d"]], "mvpy.math.rank": [[18, 4, 1, "", "rank"]], "mvpy.math.spearmanr": [[18, 4, 1, "", "spearmanr"], [18, 4, 1, "", "spearmanr_d"]], "mvpy.utilities": [[20, 0, 0, "-", "progressbar"]], "mvpy.utilities.progressbar": [[20, 1, 1, "", "Progressbar"], [20, 4, 1, "", "tqdm_joblib"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "terms": {"": [8, 17, 18], "0": [1, 3, 4, 6, 8, 9, 11, 12, 14, 17, 18], "00": [3, 6, 11, 12, 14], "000": [4, 6, 9, 11, 12, 14], "0000": [17, 18], "00096": 17, "001": [1, 3, 14], "004": 17, "012": 18, "01371": 18, "03": 17, "06": 17, "067": 17, "1": [3, 6, 7, 10, 11, 14, 17, 18], "10": [17, 18], "100": [8, 17, 18], "1000": 17, "1016": [17, 18], "110": 17, "12": [17, 18], "1274": 17, "137": 18, "1607": 18, "188": 18, "1_rsa_intro": [8, 11, 14], "2": [7, 8, 10, 11, 14, 17, 18], "20": 17, "200": 18, "2004": 17, "2008": 17, "2011": 17, "2013": 17, "2014": 17, "2015": 18, "2016": 18, "2020": 17, "240": [8, 17], "2483": 17, "2510": 17, "259x": 17, "2825": 17, "2830": 17, "28680": 8, "2_rsa_encod": [9, 11, 14], "3": [17, 18], "3389": 17, "365": 17, "4": [14, 17, 18], "411": 17, "48550": 18, "4950": 17, "5": [17, 18], "50": [17, 18], "5000": 18, "534": [8, 11, 14], "535": 14, "6": 18, "60": [8, 17, 18], "7033": 17, "87": 17, "88": 17, "9": [17, 18], "96": 17, "A": [12, 17, 18], "As": 8, "By": 17, "For": [17, 18], "If": [0, 17], "In": [7, 10], "On": [17, 18], "The": 17, "To": 13, "_": 17, "_must_": 17, "ab": 8, "ad": 17, "addit": [17, 20], "after": 17, "aim": 13, "akin": 17, "alia": 17, "alink": 18, "all": [7, 8, 14], "allow": 17, "along": 18, "alpha": 17, "alpha_": [0, 16, 17], "alpha_per_target": 17, "alreadi": 18, "also": [17, 18], "alwai": 18, "an": [1, 4, 9, 17], "analaysi": 17, "analog": 17, "analysi": [0, 13, 17, 18], "ani": [17, 20], "append": [1, 4, 9], "appli": 17, "approach": 17, "appropri": 17, "ar": [8, 17, 18], "arg": 17, "argument": [17, 20], "around": 8, "arrai": 17, "arxiv": 18, "assum": 17, "attr": 17, "attribut": 17, "avail": [13, 17], "averag": 18, "awar": 17, "ax": 8, "b": 17, "back": 17, "backend": 17, "bar": [18, 20], "base": [17, 20], "baseestim": 17, "becaus": 8, "befor": [0, 8, 17], "begin": 8, "between": [17, 18], "biass": 17, "bie\u00dfmann": 17, "blankertz": 17, "bool": [17, 20], "branch": 17, "briefli": 8, "built": 13, "call": 17, "callabl": 17, "can": [0, 8, 17, 20], "case": 17, "cat": 18, "cdot": 18, "center": 17, "chang": 17, "channel": [8, 17], "cla": 17, "class": [17, 20], "classifi": 17, "clone": [0, 16, 17], "cmap": [8, 17], "code": [1, 4, 7, 8, 9], "coef_": [0, 16, 17], "coefficeint": 17, "coeffici": 17, "collect": [0, 16, 17], "com": 13, "comparison": 8, "comput": [7, 10, 17, 18], "condit": 17, "conduct": [7, 10], "connect": 17, "consid": 17, "content": [0, 15], "context": 20, "contribut": 17, "conveni": 8, "convers": 17, "copi": 17, "correct": 17, "correl": 18, "cosin": [0, 15, 16, 17], "cosine_d": [0, 16, 17, 18], "coupl": [7, 10], "cov": 17, "covari": [0, 15, 16, 18], "covariance_": [0, 16, 17, 18], "creat": 8, "cross": [17, 18], "crossnobi": 18, "crossvalid": [0, 15, 16], "current": 17, "cv_euclidean": [0, 16, 17, 18], "cv_mahalanobi": [0, 16, 18], "cx_": [0, 8, 16, 17], "cy_": [0, 8, 16, 17], "d": [17, 18], "data": [7, 8, 17, 18], "decod": [0, 3, 14, 15, 16], "decoders_intro": [1, 3, 14], "default": [17, 20], "defin": 18, "degre": 17, "detail": 17, "deviat": 17, "di": [17, 18], "diedrichsen": 18, "differ": 17, "dim": 17, "dimens": [8, 17, 18], "dimension": 17, "disabl": 20, "disentangl": 17, "dissimilar": 18, "distanc": 18, "distinct": 17, "distribut": 18, "dive": 13, "do": [0, 1, 4, 8, 9, 17], "doe": 17, "domain": 8, "download": [1, 4, 7, 8, 9], "dtype": 18, "dure": 18, "d\u00e4hne": 17, "e": 17, "each": 17, "effect": 17, "either": 18, "ejaz": 18, "element": 18, "elimin": 18, "empir": 17, "enabl": 20, "enable_metadata_rout": 17, "encod": [0, 6, 10, 11, 14], "encoders_intro": [4, 6, 14], "end": [1, 4, 8, 9], "equal": 17, "error": 17, "estim": [0, 8, 15, 16, 18], "estimator_": [0, 16, 17], "estimators_": [0, 16, 17], "euclidean": [0, 8, 15, 16, 17], "exampl": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 17, 18], "examples_jupyt": 7, "examples_python": 7, "except": 17, "execut": [3, 6, 11, 12, 14], "exist": 17, "expect": 17, "f": 17, "fabianschneid": 13, "fall": 17, "fals": 17, "familiaris": 8, "featur": [17, 18], "fig": 8, "file": [3, 6, 11, 12, 14], "final": [17, 18], "find": 13, "first": [1, 4, 8, 9, 17], "fit": [0, 8, 16, 17, 18], "fit_intercept": 17, "fit_transform": [0, 16, 17], "float": 17, "float64": 18, "fold": 18, "follow": [0, 7, 10, 17], "found": 0, "frac": [17, 18], "freedom": 17, "from": [3, 6, 8, 11, 12, 14, 17, 18], "frontier": 17, "full": [1, 4, 8, 9, 13, 17], "full_rdm": [0, 16, 17], "func": 17, "function": [17, 18], "g": 17, "galleri": [1, 4, 7, 8, 9, 14], "gener": [1, 4, 7, 8, 9, 17], "get": 0, "getcwd": [1, 4, 9], "git": 13, "github": 13, "given": [8, 17, 20], "go": [1, 4, 8, 9], "gpu": 13, "gramfort": 17, "greatli": 17, "grisel": 17, "group": [0, 16, 17], "guid": 17, "g\u00f6rgen": 17, "h": 18, "ha": 17, "hauf": 17, "have": [0, 13, 17], "hayn": 17, "here": [0, 13, 17, 18], "home": [1, 4, 9], "how": 17, "http": 13, "i": [1, 4, 8, 9, 13, 17, 18], "ignor": 17, "implement": 17, "import": [1, 4, 8, 9, 17, 18], "imshow": [8, 17], "indic": [17, 18], "individu": 17, "inform": [17, 18], "input": [17, 18], "insid": 17, "instal": [0, 13], "instead": 17, "instruct": 0, "int": 17, "intercept": 17, "intercept_": [0, 16, 17], "interpret": 17, "inv": 18, "invers": [17, 18], "inverse_transform": [0, 16, 17], "invert": 17, "ipynb": [1, 4, 8, 9], "irrelev": 17, "iter": 17, "its": 18, "j": [17, 18], "job": 17, "joblib": 20, "journal": 17, "jupyt": [1, 4, 7, 8, 9], "k": 17, "king": 17, "kingjr": 17, "kriegeskort": [17, 18], "kwarg": [17, 20], "larg": 17, "last": 17, "learn": 17, "ledoit": 17, "ledoitwolf": 17, "length": 17, "let": [8, 17], "level": 17, "librari": 13, "like": [8, 17], "linalg": 18, "linear": 17, "linear_model": 17, "linspac": 8, "list": 17, "ll": 8, "logspac": 17, "m": 17, "machin": 17, "mahalanobi": [0, 15, 16], "make": [13, 17], "manag": 20, "manner": 18, "math": [0, 8, 15, 16, 17], "mathbf": 18, "matplotlib": [8, 17], "matric": [17, 18], "matrix": [17, 18], "max": 8, "mb": [3, 6, 11, 12, 14], "mean": 17, "mean_": [0, 16, 17], "meaningfulli": 17, "measur": 18, "mechan": 17, "meineck": 17, "mem": [3, 6, 11, 12, 14], "meta": 17, "metadata": 17, "metadata_rout": 17, "method": [13, 17], "metric": [17, 18], "michel": 17, "minut": [1, 4, 8, 9], "model": [8, 17], "modul": [0, 15], "more": [17, 18], "mu": 17, "multi": 18, "multipl": 17, "multivari": [7, 13, 17], "mv": [1, 4, 9, 17, 18], "mvpy": [0, 1, 4, 7, 8, 9, 10], "my": 13, "n": [12, 17, 18], "n_channel": 17, "n_job": [0, 16, 17], "n_trial": 17, "name": 17, "ndarrai": [17, 18], "neuro": 17, "neuroimag": [7, 17, 18], "neurosci": 17, "nice": 18, "nili": 18, "none": [8, 17], "normal": [8, 17, 18], "normalis": 17, "note": [17, 18], "notebook": [1, 4, 7, 8, 9], "now": 8, "np": [17, 18], "number": 17, "numpi": [17, 18], "o": [1, 4, 9, 17], "object": [17, 20], "obtain": 17, "onc": [13, 17], "one": 17, "onli": [8, 17], "option": 17, "origin": 17, "other": 17, "otherwis": [0, 17], "our": [8, 17], "ourselv": 8, "outcom": 17, "over": [17, 18], "ovr": 17, "ow": 17, "packag": [0, 15], "pad": 17, "parallel": 17, "paramet": [17, 18, 20], "part": 13, "particularli": 13, "pass": 17, "patch": 20, "path": [1, 4, 9], "pattern": [13, 17, 18], "pattern_": [0, 16, 17], "pearson": 18, "pearsonr": [0, 15, 16, 17], "pearsonr_d": [0, 16, 17, 18], "pedregosa": 17, "penalti": 17, "perform": 17, "phd": 13, "pi": 8, "pip": 13, "pipelin": 17, "pleas": [0, 17], "plot": 17, "plt": [8, 17], "point": 17, "pre": 17, "precis": [17, 18], "precision_": [0, 16, 17], "predict": [0, 16, 17], "predict_proba": [0, 16, 17], "preprocess": 17, "princip": [17, 18], "print": [1, 4, 8, 9, 17], "probabl": 17, "proceed": 0, "progress": [17, 20], "progressbar": [0, 15, 16], "provid": 17, "provost": 18, "py": [1, 3, 4, 6, 8, 9, 11, 14], "pyplot": [8, 17], "python": [1, 4, 7, 8, 9, 13, 17], "r": [17, 18], "rais": 17, "randint": 17, "randn": 18, "rank": [0, 15, 16], "rdbu_r": [8, 17], "rdm": [7, 10, 11, 14, 17], "rdm_": [0, 8, 16, 17], "read": 0, "readi": 8, "real": 8, "record": 17, "refer": [17, 18], "regress": 17, "relev": 17, "reliabl": 18, "remain": 8, "report": 20, "represent": [0, 13, 17], "request": 17, "requir": [1, 4, 7, 9, 10, 17], "research": 17, "respect": 18, "result": 17, "retain": 17, "return": [17, 18], "ridg": 17, "ridgecv": [0, 15, 16], "rout": 17, "rsa": [0, 7, 8, 10, 11, 14, 15, 16], "run": [1, 4, 8, 9, 17], "runner": [1, 4, 9], "s0047": 17, "same": 17, "sampl": [17, 18], "sample_weight": 17, "scale": 17, "scale_": [0, 16, 17], "scaler": [0, 15, 16], "scikit": 17, "script": [1, 4, 8, 9], "searchlight": 17, "second": [1, 4, 8, 9, 17], "section": [0, 7, 10], "see": [8, 17, 18], "select": 17, "self": 17, "sens": 17, "separ": 17, "set": 17, "set_config": 17, "set_fit_request": [0, 16, 17], "setup": [1, 4, 9], "shape": [8, 17, 18], "shape_": [0, 16, 17], "should": 17, "shrinkag": 17, "shrinkage_": [0, 16, 17], "sigma": 17, "signal": [0, 15, 16], "similar": [0, 8, 13, 17, 18], "similartii": 17, "simpl": [17, 20], "simpli": [13, 17], "simul": 8, "sin": 8, "size": [8, 17, 18], "sklearn": 17, "slide": [0, 15, 16], "so": 0, "some": [1, 4, 8, 9, 13, 17], "sometim": 18, "sourc": [0, 1, 4, 7, 8, 9], "spearman": 18, "spearmanr": [0, 15, 16, 17], "spearmanr_d": [0, 16, 17, 18], "sphinx": [1, 4, 7, 8, 9], "sqrt": 18, "squar": 18, "stack": 8, "standard": 17, "standardscal": 17, "start": 0, "std": 17, "step": [7, 10, 17], "str": 17, "structur": 8, "sub": 17, "submodul": [0, 15, 16], "subpackag": [0, 15], "subplot": 8, "sum": 18, "sum_": 18, "suppli": 17, "support": [13, 17], "sure": 17, "swapax": 18, "sy": [1, 4, 9], "syntax": 8, "system": [1, 4, 9, 17], "t": [1, 4, 9, 17, 18], "target": 17, "technic": 18, "tensor": [17, 18], "tesor": 18, "text": 18, "th": 18, "them": 17, "therefor": 18, "thi": [1, 4, 8, 9, 17, 18], "thirion": 17, "through": [7, 10], "ti": 18, "time": [1, 4, 8, 9, 17], "timepoint": 8, "to_numpi": [0, 16, 17], "to_torch": [0, 16, 17], "too": 18, "top": 17, "torch": [8, 17, 18], "torch_ridg": 17, "total": [1, 3, 4, 6, 8, 9, 11, 12, 14], "tqdm": 20, "tqdm_joblib": [0, 16, 20], "tqdm_object": 20, "transform": [0, 8, 16, 17], "trial": [8, 17, 18], "triangular": 17, "true": [17, 20], "tupl": 17, "turn": 8, "two": 17, "type": [17, 18], "unchang": 17, "union": [17, 18], "unit": 17, "unless": 17, "unrank": 18, "updat": 17, "upper": 17, "us": [7, 10, 13, 17, 18], "user": 17, "util": [0, 15, 16, 17], "v": 17, "valid": [17, 18], "vanderpla": 17, "var_": [0, 16, 17], "varianc": 17, "varoquaux": 17, "vector": [17, 18], "vectoris": 18, "verbos": [0, 16, 17], "version": 17, "vmax": 8, "vmin": 8, "voxel": 18, "w": 17, "walk": [7, 10], "walther": 18, "want": [8, 17], "we": [1, 4, 7, 8, 9, 10, 17], "weight": 17, "well": 17, "when": 17, "where": [17, 18], "wherea": 17, "wherein": 17, "whether": [17, 20], "which": 17, "while": 17, "whiten": 17, "whitener_": [0, 16, 17], "wise": 17, "wish": 17, "with_mean": 17, "with_std": 17, "without": 17, "wolf": 17, "won": [1, 4, 9], "work": [1, 4, 9, 17], "would": [8, 17], "wrapper": 18, "write": 13, "x": [8, 17, 18], "x_": [17, 18], "x_i": [17, 18], "x_j": 18, "y": [17, 18], "y_": 18, "y_i": 18, "y_j": 18, "yet": 0, "you": [0, 8, 13, 17], "your": [1, 4, 9, 17, 18], "z": 17, "zareamoghaddam": 18, "zero": [8, 17], "zip": [1, 4, 7, 8, 9], "\u00df": 17, "\u03c3": 18}, "titles": ["Documentation", "Decoders", "Decoders", "Computation times", "Encoders", "Encoders", "Computation times", "Examples", "1. Computing RDMs", "2. RSA encoders", "Representational similarity analysis", "Computation times", "Computation times", "\ud83d\ude80 Getting started with MVPy", "Computation times", "mvpy", "mvpy package", "mvpy.estimators package", "mvpy.math package", "mvpy.signal package", "mvpy.utilities package"], "titleterms": {"1": 8, "2": 9, "analysi": [7, 10], "can": 13, "comput": [3, 6, 8, 11, 12, 14], "content": [16, 17, 18, 19, 20], "cosin": 18, "covari": 17, "crossvalid": 18, "decod": [1, 2, 7, 17], "do": 13, "document": [0, 13], "encod": [4, 5, 7, 9], "estim": 17, "euclidean": 18, "exampl": 7, "get": 13, "mahalanobi": 18, "math": 18, "modul": [16, 17, 18, 19, 20], "mvpy": [13, 15, 16, 17, 18, 19, 20], "packag": [16, 17, 18, 19, 20], "pearsonr": 18, "progressbar": 20, "rank": 18, "rdm": 8, "represent": [7, 10], "ridgecv": 17, "rsa": [9, 17], "scaler": 17, "signal": 19, "similar": [7, 10], "slide": 17, "so": 13, "spearmanr": 18, "start": 13, "submodul": [17, 18, 20], "subpackag": 16, "time": [3, 6, 11, 12, 14], "util": 20, "what": 13}})